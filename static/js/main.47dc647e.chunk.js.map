{"version":3,"sources":["store/modules/like.js","store/api/likeAPI.js","components/navbar/NavBar.style.js","config/config.js","store/api/getData.js","store/api/searchAPI.js","store/modules/search.js","components/navbar/Search.style.js","store/modules/loading.js","hooks/useLoading.js","components/navbar/Search.js","hooks/useDebouce.js","components/navbar/NavBar.js","components/common/Loading.js","components/common/NoData.js","components/movieList/MainBanner.style.js","components/movieList/MainBanner.js","components/movieList/MovieCard.style.js","components/movieList/Rate.js","components/movieList/MovieCard.js","store/api/movieAPI.js","store/modules/movie.js","pages/Home.js","components/movieDetail/movieDetail.common.style.js","components/movieDetail/MovieCast.style.js","components/movieDetail/MovieCast.js","components/movieDetail/MovieInfo.style.js","components/movieDetail/MovieInfo.js","components/movieDetail/MovieMedia.style.js","components/movieDetail/MovieMedia.js","components/movieDetail/SimilarMovies.style.js","components/movieDetail/SimilarMovies.js","pages/MovieDetail.js","pages/MyMovie.js","pages/SearchResult.js","App.js","store/modules/index.js","index.js","images/no-poster.png"],"names":["getLikeList","type","result","likeMovies","i","localStorage","length","key","value","JSON","parse","getItem","push","getAllLikeMovies","likeReducer","handleActions","state","likeList","likeListSuccess","id","title","rate","poster","commonFlex","Nav","styled","nav","props","isScroll","LeftSection","section","mobile","css","LeftMenu","ul","menuOpen","TopArrow","div","IMAGE_BASE_URL","getData","language","query","a","ko","queryStr","path","axios","get","then","response","data","catch","err","console","log","getSearchResults","results","searchResult","map","movie","vote_average","poster_path","initialState","searchResults","searchSuccess","getSearchData","searchReducer","SearchBox","SearchForm","Input","searchopen","SearchBtn","button","startLoading","createAction","finishLoading","loadingReducer","action","isLoading","func","dispatch","useDispatch","useEffect","React","memo","history","useHistory","location","useLocation","inputRef","useRef","checkFirstSearch","useState","isSearching","setIsSearching","searchData","setSearchData","debouncedSearch","delay","setData","timer","setTimeout","clearTimeout","useDebounce","pathname","includes","replace","loadSearchResult","useCallback","current","goBack","useLoading","toggleSearchBtn","focus","onBlur","ref","placeholder","prefix","SearchOutlined","onChange","e","target","onClick","mobileMenuOpen","setMobileMenuOpen","didScroll","setDidScroll","isTabletOrMobile","useMediaQuery","menuContainer","window","addEventListener","scrollTop","srcElement","scrollingElement","onClickOutsideHandler","contains","onToggleMobileMenu","to","className","Loading","Fragment","color","size","NoData","MainBanner","article","image","BannerCover","MovieDetail","MoreBtn","Button","mainMovie","backdrop_path","tagline","GridWrapper","nobanner","Poster","Like","HeartFilled","detailpage","liked","Info","StarRating","BackStars","FrontStars","percent","StarFilled","MovieCard","movieId","slider","mymovie","isMobile","isLike","setIsLike","src","noPoster","alt","xl","lg","md","sm","xs","removeItem","likedMovie","setItem","stringify","addLike","getMovieList","movieList","getMainBannerData","Number","original_title","getMovieDetail","genres","genre","name","join","overview","runtime","getMovieCast","casts","cast","slice","cast_id","character","profile_path","getMovieVideos","videos","video","site","url","thumbnail","getMovieImages","images","backdrops","backdrop","file_path","getSimilarMovies","similarMovies","MovieAPI","getMainBanner","randomMovie","randomMovieId","Math","floor","random","info","movieReducer","movies","moviesSuccess","mainBanner","bannerSuccess","movieDetail","detailSuccess","listType","trend","latest","rated","match","params","useSelector","loading","likeMovieIdList","like","loadHomeData","gutter","Section","CastSection","CastInfo","settings","infinite","speed","slidesToShow","slidesToScroll","responsive","breakpoint","MovieCast","icon","UserOutlined","InfoSection","BackgroundImg","MovieMeta","Description","Title","InfoData","MediaSection","Menu","Thumbnail","PlayBtn","PlayCircleFilled","mediaType","setMediaType","mediumZoom","margin","background","changeMediaType","currentTarget","dataset","document","querySelectorAll","forEach","el","classList","remove","add","data-type","index","href","rel","SimilarSection","getMovieInfo","scrollTo","MovieMedia","SimilarMovies","MyMovie","search","App","exact","component","Home","SearchResult","combineReducers","devTool","__REDUX_DEVTOOLS_EXTENSION__","createStoreWithMiddleware","applyMiddleware","ReduxThunk","promiseMiddleware","createStore","ReactDOM","render","store","Reducer","getElementById","module","exports"],"mappings":"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","file":"static/js/main.47dc647e.chunk.js","sourcesContent":["import { getAllLikeMovies } from \"../api/likeAPI\";\r\nimport { handleActions } from \"redux-actions\";\r\n\r\nconst GET_LIKELIST = \"movieApp/GET_LIKELIST\";\r\n\r\nconst initialState = {\r\n  likeList: {\r\n    likeListSuccess: false,\r\n    result: [\r\n      {\r\n        id: \"\",\r\n        title: \"\",\r\n        rate: \"\",\r\n        poster: \"\",\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nexport const getLikeList = () => {\r\n  const result = getAllLikeMovies();\r\n\r\n  return {\r\n    type: GET_LIKELIST,\r\n    result,\r\n  };\r\n};\r\n\r\nconst likeReducer = handleActions(\r\n  {\r\n    [GET_LIKELIST]: (state, { result }) => ({\r\n      ...state,\r\n      likeList: {\r\n        likeListSuccess: true,\r\n        result,\r\n      },\r\n    }),\r\n  },\r\n  initialState\r\n);\r\n\r\nexport default likeReducer;\r\n","export const getAllLikeMovies = () => {\r\n  let likeMovies = [];\r\n  for (let i = 0; i < localStorage.length; i++) {\r\n    const key = localStorage.key(i);\r\n    const value = JSON.parse(localStorage.getItem(key));\r\n\r\n    likeMovies.push(value);\r\n  }\r\n  return likeMovies;\r\n};\r\n","import styled, { css } from \"styled-components\";\r\n\r\n/* Common */\r\nconst commonUl = `\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n`;\r\n\r\nconst commonFlex = `\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\n/* Desktop */\r\nconst Nav = styled.nav`\r\n  ${commonFlex}\r\n  justify-content: space-between;\r\n  position: fixed;\r\n  background-color: ${(props) => (props.isScroll ? \"rgba(20,20,20,0.95);\" : \"\")};\r\n  transition: background-color 0.3s linear;\r\n  padding: 20px 40px;\r\n  height: 70px;\r\n  width: 100%;\r\n  z-index: 4;\r\n\r\n  @media (max-width: 960px) {\r\n    padding: 20px;\r\n  }\r\n`;\r\n/*color: #eeeeee;\r\n  text-shadow: 4px 0px #939599; */\r\n\r\nconst LeftSection = styled.section`\r\n  ${(props) =>\r\n    !props.mobile\r\n      ? css`\r\n          ${commonFlex}\r\n        `\r\n      : css`\r\n          display: flex;\r\n          align-items: center;\r\n          height: 100%;\r\n        `}\r\n\r\n  & > a {\r\n    font-size: 1.8rem;\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nconst LeftMenu = styled.ul`\r\n  ${commonUl}\r\n  color: white;\r\n  font-size: 1.2em;\r\n  ${(props) =>\r\n    !props.mobile\r\n      ? css`\r\n          ${commonFlex}\r\n          margin-left: 15px;\r\n          li {\r\n            ${commonFlex}\r\n            padding-left: 18px;\r\n            a:hover {\r\n              font-weight: 600;\r\n            }\r\n          }\r\n          .nav_menu {\r\n            display: none;\r\n          }\r\n        `\r\n      : css`\r\n          flex-direction: column;\r\n          margin-left: 1.7rem;\r\n          height: 25px;\r\n          text-align: center;\r\n          li {\r\n          }\r\n          .nav_menu {\r\n            cursor: pointer;\r\n            width: ${(props) => (props.menuOpen ? \"30%\" : \"100%\")};\r\n            margin-bottom: 30px;\r\n            span {\r\n              font-size: small;\r\n            }\r\n            & + li {\r\n              border-top: 2px solid white;\r\n            }\r\n          }\r\n          li:not(.nav_menu) {\r\n            display: ${(props) => (props.menuOpen ? \"\" : \"none\")};\r\n            background-color: rgba(20, 20, 20, 0.9);\r\n            transform: translateX(-38%);\r\n          }\r\n          li > a {\r\n            width: 100%;\r\n            padding: 13px 50px;\r\n            display: inline-block;\r\n            &:hover {\r\n              background-color: rgba(100, 100, 100, 0.5);\r\n            }\r\n          }\r\n        `}\r\n`;\r\n\r\nconst TopArrow = styled.div`\r\n  content: \"\";\r\n  position: absolute;\r\n  left: 0;\r\n  right: 0;\r\n  top: -9px;\r\n  margin: 0 auto;\r\n  width: 0;\r\n  height: 0;\r\n  border-bottom: 7px solid white;\r\n  border-left: 10px solid transparent;\r\n  border-right: 10px solid transparent;\r\n`;\r\n\r\nexport { Nav, LeftSection, LeftMenu, TopArrow };\r\n","// The Movie DB API\r\nexport const API_KEY = \"810cef9b256b121526d76a171f2f8138\";\r\nexport const API_URL = \"https://api.themoviedb.org/3/\";\r\nexport const IMAGE_BASE_URL = \"http://image.tmdb.org/t/p/\";\r\nexport const YOUTUBE_URL = \"https://www.youtube.com/watch?v=\";\r\n","import axios from \"axios\";\r\nimport { API_URL, API_KEY } from \"../../config/config\";\r\n\r\nexport const getData = async (type, language, query) => {\r\n  const ko = language ? `&language=${language}` : \"\";\r\n  const queryStr = query ? `&query=${query}` : \"\";\r\n  const path = `${API_URL}${type}?api_key=${API_KEY}${ko}${queryStr}`;\r\n  const result = await axios\r\n    .get(path) //\r\n    .then((response) => response.data)\r\n    .catch((err) => console.log(err));\r\n\r\n  return result;\r\n};\r\n","import { getData } from \"./getData\";\r\nimport { IMAGE_BASE_URL } from \"../../config/config\";\r\n\r\nexport const getSearchResults = async (query) => {\r\n  const result = (await getData(`search/movie`, \"ko\", query)).results;\r\n  const searchResult = result.map((movie) => {\r\n    return {\r\n      id: movie.id,\r\n      title: movie.title,\r\n      vote_average: movie.vote_average,\r\n      poster_path: movie.poster_path ? `${IMAGE_BASE_URL}w500${movie.poster_path}` : null,\r\n    };\r\n  });\r\n\r\n  return searchResult;\r\n};\r\n","import { getSearchResults } from \"../api/searchAPI\";\r\nimport { handleActions } from \"redux-actions\";\r\n\r\nconst GET_SEARCH_RESULTS = \"movieApp/GET_SEARCH_RESULTS\";\r\n\r\nconst initialState = {\r\n  searchResults: {\r\n    searchSuccess: false,\r\n    result: [\r\n      {\r\n        id: \"\",\r\n        title: \"\",\r\n        vote_average: \"\",\r\n        poster_path: \"\",\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nexport const getSearchData = async (query) => {\r\n  if (query === \"\") {\r\n    return {\r\n      type: GET_SEARCH_RESULTS,\r\n      searchResults: initialState.searchResults,\r\n    };\r\n  }\r\n  const result = await getSearchResults(query);\r\n\r\n  return {\r\n    type: GET_SEARCH_RESULTS,\r\n    searchResults: {\r\n      searchSuccess: true,\r\n      result,\r\n    },\r\n  };\r\n};\r\n\r\nconst searchReducer = handleActions(\r\n  {\r\n    [GET_SEARCH_RESULTS]: (state, { searchResults }) => ({\r\n      ...state,\r\n      searchResults,\r\n    }),\r\n  },\r\n  initialState\r\n);\r\n\r\nexport default searchReducer;\r\n","import styled, { css } from \"styled-components\";\r\nimport { Input } from \"antd\";\r\n\r\nconst SearchBox = styled.div`\r\n  position: relative;\r\n  font-size: 1.4rem;\r\n  color: white;\r\n`;\r\n\r\nconst SearchForm = styled(Input)`\r\n  width: ${(props) => (props.searchopen ? \"250px\" : \"10px\")};\r\n  opacity: ${(props) => (props.searchopen ? \"1\" : \"0\")};\r\n  position: absolute;\r\n  right: -15px;\r\n  margin-right: 10px;\r\n  padding: 5px 10px;\r\n  border-radius: 3px;\r\n  border-color: white;\r\n  background-color: rgba(20, 20, 20, 0.9);\r\n  transition: width 0.7s, opacity 0.7s ease;\r\n  &:hover {\r\n    border-color: white;\r\n  }\r\n  span {\r\n    color: white;\r\n    font-size: 1.4rem;\r\n  }\r\n  input {\r\n    background-color: rgba(20, 20, 20, 0);\r\n    color: white;\r\n    font-size: 1.1em;\r\n    margin: 0 5px;\r\n  }\r\n`;\r\n\r\nconst SearchBtn = styled.button`\r\n  position: relative;\r\n  background: none;\r\n  border: none;\r\n  outline: none;\r\n  cursor: pointer;\r\n  z-index: 5;\r\n  ${(props) =>\r\n    props.searchopen\r\n      ? css`\r\n          opacity: 0;\r\n          margin-right: 15px;\r\n          transition: opacity 0.1s ease, margin-right 0.5s ease;\r\n          pointer-events: none;\r\n        `\r\n      : css`\r\n          opacity: 1;\r\n          margin-right: 0px;\r\n          transition: opacity 0.5s ease 0.1s, margin-right 0.5s ease;\r\n        `};\r\n`;\r\n\r\nexport { SearchBox, SearchForm, SearchBtn };\r\n","import { createAction, handleActions } from \"redux-actions\";\r\n\r\nconst START_LOADING = \"movieApp/START_LOADING\";\r\nconst FINISH_LOADING = \"movieApp/FINISH_LOADING\";\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n};\r\n\r\nexport const startLoading = createAction(START_LOADING);\r\nexport const finishLoading = createAction(FINISH_LOADING);\r\n\r\nconst loadingReducer = handleActions(\r\n  {\r\n    [START_LOADING]: (state, action) => ({\r\n      isLoading: true,\r\n    }),\r\n    [FINISH_LOADING]: (state, action) => ({\r\n      isLoading: false,\r\n    }),\r\n  },\r\n  initialState\r\n);\r\n\r\nexport default loadingReducer;\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { startLoading, finishLoading } from \"../store/modules/loading\";\r\n\r\nexport default (func) => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(startLoading());\r\n    (async () => {\r\n      await func();\r\n      dispatch(finishLoading());\r\n    })();\r\n\r\n    return () => dispatch(startLoading());\r\n  }, [func]);\r\n};\r\n","import React, { useRef, useState, useEffect, useCallback } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getSearchData } from \"../../store/modules/search\";\r\nimport { SearchBox, SearchForm, SearchBtn } from \"./Search.style\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport useDebounce from \"../../hooks/useDebouce\";\r\nimport \"antd/dist/antd.css\";\r\nimport useLoading from \"../../hooks/useLoading\";\r\n\r\nfunction Search() {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n  const inputRef = useRef(null);\r\n  const checkFirstSearch = useRef(true);\r\n  const [isSearching, setIsSearching] = useState(false);\r\n  const [searchData, setSearchData] = useState(\"\");\r\n  const debouncedSearch = useDebounce(searchData, 800);\r\n\r\n  useEffect(() => {\r\n    const { pathname } = location;\r\n\r\n    if (pathname.includes(\"search\")) {\r\n      history.replace(\"/movie\");\r\n    }\r\n  }, []);\r\n\r\n  const loadSearchResult = useCallback(async () => {\r\n    if (!isSearching) return;\r\n    if (debouncedSearch) {\r\n      if (checkFirstSearch.current) {\r\n        history.push(\"/search\");\r\n        checkFirstSearch.current = false;\r\n      } else {\r\n        history.replace(\"/search\");\r\n      }\r\n      dispatch(await getSearchData(debouncedSearch));\r\n    } else if (debouncedSearch === \"\") {\r\n      if (!checkFirstSearch.current) {\r\n        history.goBack();\r\n        checkFirstSearch.current = true;\r\n      } else {\r\n        history.push(\"/movie\");\r\n      }\r\n    }\r\n  }, [debouncedSearch]);\r\n\r\n  useLoading(loadSearchResult);\r\n\r\n  const onChange = (e) => {\r\n    setSearchData(e.target.value);\r\n  };\r\n\r\n  const openSearchBox = () => {\r\n    setIsSearching(true);\r\n    inputRef.current.focus();\r\n  };\r\n\r\n  const closeSearchBox = () => {\r\n    const { pathname } = location;\r\n\r\n    if (pathname.includes(\"search\")) {\r\n      setIsSearching(true);\r\n      return;\r\n    }\r\n    setIsSearching(false);\r\n    setSearchData(\"\");\r\n  };\r\n\r\n  const toggleSearchBtn = () => {\r\n    !isSearching ? openSearchBox() : closeSearchBox();\r\n  };\r\n\r\n  return (\r\n    <SearchBox onBlur={toggleSearchBtn}>\r\n      <SearchForm //\r\n        ref={inputRef}\r\n        value={searchData}\r\n        placeholder=\"Search\"\r\n        prefix={<SearchOutlined />}\r\n        searchopen={isSearching ? 1 : 0}\r\n        onChange={onChange}\r\n      />\r\n      <SearchBtn //\r\n        searchopen={isSearching ? 1 : 0}\r\n        onClick={toggleSearchBtn}\r\n      >\r\n        <SearchOutlined />\r\n      </SearchBtn>\r\n    </SearchBox>\r\n  );\r\n}\r\n\r\nexport default React.memo(Search);\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport default (value, delay) => {\r\n  const [data, setData] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => setData(value), delay);\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [value, delay]);\r\n\r\n  return data;\r\n};\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport { Nav, LeftSection, LeftMenu, TopArrow } from \"./NavBar.style\";\r\nimport Search from \"./Search\";\r\n\r\nfunction NavBar() {\r\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\r\n  const [didScroll, setDidScroll] = useState(false);\r\n  let isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1199px)\" });\r\n  let menuContainer = useRef(null);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", (e) => {\r\n      const scrollTop = e.srcElement.scrollingElement.scrollTop;\r\n      if (scrollTop >= 50) {\r\n        setDidScroll(true);\r\n      } else {\r\n        setDidScroll(false);\r\n      }\r\n    });\r\n    window.addEventListener(\"click\", onClickOutsideHandler);\r\n  });\r\n\r\n  const onClickOutsideHandler = (e) => {\r\n    if (mobileMenuOpen && !menuContainer.current.contains(e.target)) {\r\n      setMobileMenuOpen(false);\r\n    }\r\n  };\r\n\r\n  const onToggleMobileMenu = () => {\r\n    if (!isTabletOrMobile) return;\r\n    setMobileMenuOpen(!mobileMenuOpen);\r\n  };\r\n\r\n  return (\r\n    <Nav isScroll={didScroll}>\r\n      <LeftSection mobile={isTabletOrMobile}>\r\n        <Link to=\"/movie\">Movies</Link>\r\n        <LeftMenu //\r\n          ref={menuContainer}\r\n          mobile={isTabletOrMobile}\r\n          menuOpen={mobileMenuOpen}\r\n        >\r\n          <li //\r\n            className=\"nav_menu\"\r\n            onClick={onToggleMobileMenu}\r\n          >\r\n            메뉴\r\n            <span>▼</span>\r\n          </li>\r\n          <li>\r\n            <TopArrow />\r\n            <Link to=\"/list/latest\" onClick={onToggleMobileMenu}>\r\n              최신순\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/list/trend\" onClick={onToggleMobileMenu}>\r\n              인기순\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/list/rated\" onClick={onToggleMobileMenu}>\r\n              평점순\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/mymovie\" onClick={onToggleMobileMenu}>\r\n              나의 영화\r\n            </Link>\r\n          </li>\r\n        </LeftMenu>\r\n      </LeftSection>\r\n      <Search />\r\n    </Nav>\r\n  );\r\n}\r\n\r\nexport default React.memo(NavBar);\r\n","import React from \"react\";\r\nimport { TransverseLoading } from \"react-loadingg\";\r\n\r\nfunction Loading() {\r\n  return (\r\n    <React.Fragment>\r\n      <TransverseLoading //\r\n        color={\"firebrick\"}\r\n        size={\"large\"}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Loading;\r\n","import styled from \"styled-components\";\r\n\r\nconst NoData = styled.div`\r\n  font-size: 1.2em;\r\n  padding: 5px 8px;\r\n  color: #ccc;\r\n`;\r\n\r\nexport default NoData;\r\n","import styled from \"styled-components\";\r\nimport { Button } from \"antd\";\r\n\r\nconst MainBanner = styled.article`\r\n  position: relative;\r\n  background: radial-gradient(rgba(20, 20, 20, 0) 30%, rgba(20, 20, 20, 0.1) 60%, rgba(20, 20, 20, 0.7) 95%),\r\n    ${(props) => props.image && `url(${props.image}) `} no-repeat center center;\r\n  background-size: cover;\r\n  width: 100%;\r\n  height: 750px;\r\n`;\r\n\r\nconst BannerCover = styled.div`\r\n  width: 100%;\r\n  height: 800px;\r\n  top: 0;\r\n  left: 0;\r\n  background: linear-gradient(\r\n    /* */ to bottom,\r\n    rgba(20, 20, 20, 0) 0%,\r\n    rgba(20, 20, 20, 0.5) 65%,\r\n    rgba(20, 20, 20, 0.75) 83%,\r\n    rgba(20, 20, 20, 1) 92%\r\n  );\r\n`;\r\n\r\nconst MovieDetail = styled.div`\r\n  position: absolute;\r\n  bottom: 0;\r\n  width: 100%;\r\n  padding: 10px 40px 60px;\r\n  h2,\r\n  p {\r\n    color: white;\r\n  }\r\n  h2 {\r\n    font-size: 2.3rem;\r\n    font-weight: bold;\r\n    margin-bottom: 13px;\r\n  }\r\n  p {\r\n    padding-left: 2px;\r\n    font-size: 1.3rem;\r\n  }\r\n\r\n  @media (max-width: 960px) {\r\n    padding: 10px 30px 60px;\r\n  }\r\n`;\r\n\r\nconst MoreBtn = styled(Button)`\r\n  background-color: rgba(109, 109, 110, 0.8);\r\n  height: auto;\r\n  border: none;\r\n  border-radius: 5px;\r\n  color: white;\r\n  padding: 8px 1.8rem;\r\n  font-size: 1.2rem;\r\n  &:hover {\r\n    color: white;\r\n    background-color: rgba(109, 109, 110, 0.5);\r\n  }\r\n`;\r\n\r\nexport {\r\n  MainBanner, //\r\n  MovieDetail,\r\n  BannerCover,\r\n  MoreBtn,\r\n};\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as S from \"./MainBanner.style\";\r\n\r\nfunction MainBanner({ mainMovie }) {\r\n  const history = useHistory();\r\n  const { id, backdrop_path, title, tagline } = mainMovie;\r\n  const onClickMoreBtn = () => history.push(`/movie/${id}`);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <S.MainBanner image={backdrop_path}>\r\n        <div className=\"player\"></div>\r\n        <S.BannerCover />\r\n        <S.MovieDetail>\r\n          <h2>{title}</h2>\r\n          <p>{tagline}</p>\r\n          <S.MoreBtn onClick={onClickMoreBtn}>자세히 보기</S.MoreBtn>\r\n        </S.MovieDetail>\r\n      </S.MainBanner>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default MainBanner;\r\n","import styled, { css } from \"styled-components\";\r\nimport { HeartFilled } from \"@ant-design/icons\";\r\n\r\nconst GridWrapper = styled.div`\r\n  width: 100%;\r\n  margin: 1rem auto;\r\n  padding: 30px 50px 10px;\r\n  ${(props) => props.nobanner && \"padding-top: 100px; margin-top: 0;\"}\r\n  h2 {\r\n    color: white;\r\n    font-size: 1.7rem;\r\n    font-weight: 600;\r\n    border-bottom: 1px solid #eee;\r\n    padding: 0 15px 15px;\r\n    margin-bottom: 30px;\r\n  }\r\n\r\n  @media (max-width: 960px) {\r\n    padding: 30px 30px 10px;\r\n    ${(props) => props.nobanner && \"padding-top: 100px; margin-top: 0;\"}\r\n  }\r\n`;\r\n\r\nconst Poster = styled.div`\r\n  position: relative;\r\n  height: 100%;\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 5px;\r\n  }\r\n  &:hover {\r\n    & > span {\r\n      opacity: 1;\r\n    }\r\n    & > span:hover {\r\n      transform: scale(1.15);\r\n    }\r\n    & > a > div {\r\n      background-color: rgb(20, 20, 20, 0.7);\r\n      span {\r\n        opacity: 1;\r\n      }\r\n      div {\r\n        opacity: 1;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Like = styled(HeartFilled)`\r\n  ${(props) =>\r\n    !props.detailpage &&\r\n    css`\r\n      position: absolute;\r\n      top: 0;\r\n      right: 0;\r\n    `}\r\n\r\n  font-size: 2.2rem;\r\n  padding: 15px 10px;\r\n  cursor: pointer;\r\n  transition: all 0.5s ease;\r\n  ${(props) => (props.liked ? \"color: #ff7875;\" : \"color: #eee;\")}\r\n  ${(props) => (props.mobile ? \"opacity: 1; \" : \"opacity: 0;\")}\r\n  svg {\r\n    filter: drop-shadow(1px 0px 2px rgba(0, 0, 0, 0.4));\r\n  }\r\n`;\r\n\r\nconst Info = styled.div`\r\n  ${(props) =>\r\n    props.mobile //\r\n      ? css`\r\n          bottom: 0;\r\n          height: auto;\r\n          background-color: rgb(20, 20, 20, 0.7);\r\n          padding: 8px 5px 12px;\r\n          span,\r\n          div {\r\n            opacity: 1;\r\n          }\r\n        `\r\n      : css`\r\n          top: 0;\r\n          height: 100%;\r\n          padding: 0 5px;\r\n          background-color: rgb(20, 20, 20, 0);\r\n          transition: all 0.5s ease;\r\n          span,\r\n          div {\r\n            opacity: 0;\r\n            transition: all 0.5s ease;\r\n          }\r\n        `}\r\n  left: 0;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: absolute;\r\n\r\n  span {\r\n    text-align: center;\r\n    font-weight: 700;\r\n    font-size: 1.45rem;\r\n  }\r\n`;\r\n\r\nexport { GridWrapper, Poster, Info, Like };\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { StarFilled } from \"@ant-design/icons\";\r\n\r\nfunction Rate(props) {\r\n  return (\r\n    <StarRating>\r\n      <BackStars>\r\n        <StarFilled />\r\n        <StarFilled />\r\n        <StarFilled />\r\n        <StarFilled />\r\n        <StarFilled />\r\n      </BackStars>\r\n      <FrontStars percent={props.rate}>\r\n        <StarFilled />\r\n        <StarFilled />\r\n        <StarFilled />\r\n        <StarFilled />\r\n        <StarFilled />\r\n      </FrontStars>\r\n    </StarRating>\r\n  );\r\n}\r\n\r\nconst StarRating = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n  margin-top: ${(props) => (props.detailpage ? \"8px\" : \"15px;\")};\r\n  width: fit-content;\r\n`;\r\n\r\nconst BackStars = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n`;\r\n\r\nconst FrontStars = styled.div`\r\n  width: ${(props) => (props.percent ? props.percent * 10 + \"%\" : \"0%\")};\r\n  display: flex;\r\n  color: #ffbc0b;\r\n  overflow: hidden;\r\n  position: absolute;\r\n  text-shadow: 2px 2px 5px #d29b09;\r\n  top: 0;\r\n  transition: all 0.5s;\r\n`;\r\n\r\nexport default React.memo(Rate);\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Poster, Info, Like } from \"./MovieCard.style\";\r\nimport { getLikeList } from \"../../store/modules/like\";\r\nimport noPoster from \"../../images/no-poster.png\";\r\nimport { Col } from \"antd\";\r\nimport Rate from \"./Rate\";\r\n\r\nfunction MovieCard({ movieId, title, rate, poster, liked, slider, mymovie }) {\r\n  const dispatch = useDispatch();\r\n  let isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1199px)\" });\r\n  let isMobile = useMediaQuery({ query: \"(max-width: 575px)\" });\r\n  const [isLike, setIsLike] = useState(liked);\r\n\r\n  const addLike = () => {\r\n    const likedMovie = {\r\n      id: movieId,\r\n      title,\r\n      rate,\r\n      poster,\r\n    };\r\n    localStorage.setItem(movieId, JSON.stringify(likedMovie));\r\n  };\r\n\r\n  const removeLike = () => {\r\n    localStorage.removeItem(movieId);\r\n  };\r\n\r\n  const toggleLikeBtn = () => {\r\n    isLike ? removeLike() : addLike();\r\n    setIsLike(!isLike);\r\n    if (mymovie) dispatch(getLikeList());\r\n  };\r\n\r\n  if (!slider) {\r\n    return (\r\n      <Col xl={4} lg={6} md={8} sm={12} xs={24}>\r\n        <Poster //\r\n          mobile={isMobile ? 1 : 0}\r\n        >\r\n          <Link to={`/movie/${movieId}`}>\r\n            <img //\r\n              src={poster ? poster : noPoster}\r\n              alt={title}\r\n            />\r\n            <Info mobile={isTabletOrMobile ? 1 : 0}>\r\n              <span>{title}</span>\r\n              <Rate rate={rate} />\r\n            </Info>\r\n          </Link>\r\n          <Like //\r\n            onClick={toggleLikeBtn}\r\n            liked={isLike ? 1 : 0}\r\n            mobile={isTabletOrMobile ? 1 : 0}\r\n          />\r\n        </Poster>\r\n      </Col>\r\n    );\r\n  } else {\r\n    return (\r\n      <Poster>\r\n        <Link to={`/movie/${movieId}`}>\r\n          <img //\r\n            src={poster ? poster : noPoster}\r\n            alt={title}\r\n          />\r\n          <Info mobile={isTabletOrMobile ? 1 : 0}>\r\n            <span>{title}</span>\r\n            <Rate rate={rate} />\r\n          </Info>\r\n        </Link>\r\n      </Poster>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieCard;\r\n","import { getData } from \"./getData\";\r\nimport { IMAGE_BASE_URL, YOUTUBE_URL } from \"../../config/config\";\r\n\r\nexport const getMovieList = async (path) => {\r\n  const result = (await getData(path, \"ko\")).results;\r\n  const movieList = result.map((movie) => {\r\n    return {\r\n      id: movie.id,\r\n      title: movie.title,\r\n      vote_average: movie.vote_average,\r\n      poster_path: `${IMAGE_BASE_URL}w500${movie.poster_path}`,\r\n    };\r\n  });\r\n\r\n  return movieList;\r\n};\r\n\r\nexport const getMainBannerData = async (id) => {\r\n  const result = await getData(`movie/${id}`, \"ko\");\r\n\r\n  return {\r\n    id: Number(id),\r\n    title: result.title,\r\n    original_title: result.original_title,\r\n    tagline: result.tagline,\r\n    backdrop_path: `${IMAGE_BASE_URL}original${result.backdrop_path}`,\r\n  };\r\n};\r\n\r\nexport const getMovieDetail = async (id) => {\r\n  const result = await getData(`movie/${id}`, \"ko\");\r\n  const genres = result.genres.map((genre) => genre.name).join(\", \");\r\n\r\n  return {\r\n    id: Number(id),\r\n    title: result.title,\r\n    original_title: result.original_title,\r\n    overview: result.overview,\r\n    genres: genres,\r\n    runtime: result.runtime,\r\n    vote_average: result.vote_average,\r\n    backdrop_path: `${IMAGE_BASE_URL}original${result.backdrop_path}`,\r\n    poster_path: result.poster_path //\r\n      ? `${IMAGE_BASE_URL}w500${result.poster_path}`\r\n      : null,\r\n  };\r\n};\r\n\r\nexport const getMovieCast = async (id) => {\r\n  const result = await getData(`movie/${id}/credits`);\r\n  let casts = result.cast.slice(0, 10);\r\n  casts = casts.map((cast) => {\r\n    return {\r\n      cast_id: cast.id,\r\n      character: cast.character,\r\n      name: cast.name,\r\n      profile_path: cast.profile_path //\r\n        ? `${IMAGE_BASE_URL}w200${cast.profile_path}`\r\n        : null,\r\n    };\r\n  });\r\n\r\n  return casts;\r\n};\r\n\r\nexport const getMovieVideos = async (id) => {\r\n  const result = await getData(`movie/${id}/videos`);\r\n  const videos = result.results.map((video) => {\r\n    if (video.site === \"YouTube\") {\r\n      return {\r\n        url: `${YOUTUBE_URL}${video.key}`,\r\n        thumbnail: `https://img.youtube.com/vi/${video.key}/mqdefault.jpg`,\r\n      };\r\n    }\r\n  });\r\n\r\n  return videos;\r\n};\r\n\r\nexport const getMovieImages = async (id) => {\r\n  const result = await getData(`movie/${id}/images`);\r\n  const images = result.backdrops.map((backdrop) => {\r\n    return `${IMAGE_BASE_URL}original${backdrop.file_path}`;\r\n  });\r\n\r\n  return images;\r\n};\r\n\r\nexport const getSimilarMovies = async (id) => {\r\n  const result = await getData(`movie/${id}/similar`, \"ko\");\r\n  let similarMovies = result.results.slice(0, 8);\r\n  similarMovies = similarMovies.map((movie) => {\r\n    return {\r\n      id: movie.id,\r\n      title: movie.title,\r\n      original_title: movie.original_title,\r\n      vote_average: movie.vote_average,\r\n      poster_path: `${IMAGE_BASE_URL}w500${movie.poster_path}`,\r\n    };\r\n  });\r\n\r\n  return similarMovies;\r\n};\r\n","import * as MovieAPI from \"../api/movieAPI\";\r\nimport { handleActions } from \"redux-actions\";\r\n\r\nconst GET_MOVIES = \"movieApp/GET_MOVIES\";\r\nconst GET_MAINBANNERS = \"movieApp/GET_MAINBANNERS\";\r\nconst GET_MOVIE_DETAIL = \"movieApp/GET_MOVIE_DETAIL\";\r\n\r\nconst initialState = {\r\n  movies: {\r\n    moviesSuccess: false,\r\n    result: [\r\n      {\r\n        id: \"\",\r\n        title: \"\",\r\n        vote_average: \"\",\r\n        poster_path: \"\",\r\n      },\r\n    ],\r\n  },\r\n  mainBanner: {\r\n    bannerSuccess: false,\r\n    result: {\r\n      id: \"\",\r\n      title: \"\",\r\n      original_title: \"\",\r\n      tagline: \"\",\r\n      backdrop_path: \"\",\r\n    },\r\n  },\r\n  movieDetail: {\r\n    detailSuccess: false,\r\n    result: {\r\n      id: \"\",\r\n      title: \"\",\r\n      original_title: \"\",\r\n      overview: \"\",\r\n      genres: \"\",\r\n      runtime: \"\",\r\n      vote_average: \"\",\r\n      backdrop_path: \"\",\r\n      poster_path: \"\",\r\n      casts: [\r\n        {\r\n          cast_id: \"\",\r\n          character: \"\",\r\n          name: \"\",\r\n          profile_path: \"\",\r\n        },\r\n      ],\r\n      videos: [\r\n        {\r\n          url: \"\",\r\n          thumbnail: \"\",\r\n        },\r\n      ],\r\n      images: [],\r\n      similarMovies: [\r\n        {\r\n          id: \"\",\r\n          title: \"\",\r\n          original_title: \"\",\r\n          vote_average: \"\",\r\n          poster_path: \"\",\r\n        },\r\n      ],\r\n    },\r\n  },\r\n};\r\n\r\nexport const getMovieList = async (path) => {\r\n  const result = await MovieAPI.getMovieList(path);\r\n\r\n  return {\r\n    type: GET_MOVIES,\r\n    result,\r\n  };\r\n};\r\n\r\nexport const getMainBanner = async (path) => {\r\n  let randomMovie = {};\r\n  const movieList = await MovieAPI.getMovieList(path);\r\n\r\n  while (true) {\r\n    const randomMovieId = movieList[Math.floor(Math.random() * movieList.length)].id;\r\n    randomMovie = await MovieAPI.getMainBannerData(randomMovieId);\r\n\r\n    if (randomMovie.title && randomMovie.tagline && randomMovie.backdrop_path) {\r\n      randomMovie = {\r\n        type: GET_MAINBANNERS,\r\n        result: randomMovie,\r\n      };\r\n      break;\r\n    }\r\n  }\r\n\r\n  return randomMovie;\r\n};\r\n\r\nexport const getMovieDetail = async (movieId) => {\r\n  const info = await MovieAPI.getMovieDetail(movieId);\r\n  const casts = await MovieAPI.getMovieCast(movieId);\r\n  const videos = await MovieAPI.getMovieVideos(movieId);\r\n  const images = await MovieAPI.getMovieImages(movieId);\r\n  const similarMovies = await MovieAPI.getSimilarMovies(movieId);\r\n\r\n  return {\r\n    type: GET_MOVIE_DETAIL,\r\n    result: { ...info, casts, videos, images, similarMovies },\r\n  };\r\n};\r\n\r\nconst movieReducer = handleActions(\r\n  {\r\n    [GET_MOVIES]: (state, { result }) => ({\r\n      ...state,\r\n      movies: {\r\n        moviesSuccess: true,\r\n        result,\r\n      },\r\n    }),\r\n    [GET_MAINBANNERS]: (state, { result }) => ({\r\n      ...state,\r\n      mainBanner: {\r\n        bannerSuccess: true,\r\n        result,\r\n      },\r\n    }),\r\n    [GET_MOVIE_DETAIL]: (state, { result }) => ({\r\n      ...state,\r\n      movieDetail: {\r\n        detailSuccess: true,\r\n        result,\r\n      },\r\n    }),\r\n  },\r\n  initialState\r\n);\r\n\r\nexport default movieReducer;\r\n","import React, { Fragment, useCallback, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Loading } from \"../components/common\";\r\nimport { MovieCard, MainBanner } from \"../components/movieList\";\r\nimport { GridWrapper } from \"../components/movieList/MovieCard.style\";\r\nimport { getLikeList } from \"../store/modules/like\";\r\nimport { getMovieList, getMainBanner } from \"../store/modules/movie\";\r\nimport useLoading from \"../hooks/useLoading\";\r\nimport { Row } from \"antd\";\r\n\r\nconst listType = {\r\n  trend: \"trending/movie/week\",\r\n  latest: \"movie/now_playing\",\r\n  rated: \"movie/top_rated\",\r\n};\r\n\r\nfunction Home({ match }) {\r\n  const dispatch = useDispatch();\r\n  let type = match.params.type;\r\n  type = type ? type : \"trend\";\r\n  const { moviesSuccess, result: movieList } = useSelector((state) => state.movie.movies);\r\n  const { bannerSuccess, result: mainMovie } = useSelector((state) => state.movie.mainBanner);\r\n  const isLoading = useSelector((state) => state.loading.isLoading);\r\n  const likeList = useSelector((state) => state.like.likeList.result);\r\n  const likeMovieIdList = likeList.map((movie) => movie.id);\r\n\r\n  const loadHomeData = useCallback(async () => {\r\n    dispatch(await getMovieList(listType[type]));\r\n    dispatch(await getMainBanner(listType[type]));\r\n  }, [type]);\r\n\r\n  useLoading(loadHomeData);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(getLikeList());\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      {!isLoading && moviesSuccess && bannerSuccess ? (\r\n        <Fragment>\r\n          <MainBanner mainMovie={mainMovie} />\r\n          <GridWrapper>\r\n            <Row gutter={[20, 30]}>\r\n              {movieList.map((movie) => (\r\n                <MovieCard //\r\n                  key={movie.id}\r\n                  movieId={movie.id}\r\n                  title={movie.title}\r\n                  rate={movie.vote_average}\r\n                  poster={movie.poster_path ? movie.poster_path : null}\r\n                  liked={likeMovieIdList.includes(movie.id)}\r\n                />\r\n              ))}\r\n            </Row>\r\n          </GridWrapper>\r\n        </Fragment>\r\n      ) : (\r\n        <Loading />\r\n      )}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default React.memo(Home);\r\n","import { css } from \"styled-components\";\r\n\r\nconst Section = css`\r\n  position: relative;\r\n  color: white;\r\n  padding: 0 12vw;\r\n  margin-bottom: 10vh;\r\n  h2 {\r\n    color: white;\r\n    font-size: 1.8rem;\r\n    font-weight: 800;\r\n    margin-bottom: 20px;\r\n  }\r\n  div > button {\r\n    z-index: 2;\r\n    width: auto;\r\n    height: auto;\r\n  }\r\n  div > button:before {\r\n    font-size: 35px;\r\n  }\r\n  .slick-track {\r\n    margin: 0;\r\n  }\r\n  .slick-slide {\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  @media (max-width: 1400px) {\r\n    padding: 0 8vw;\r\n  }\r\n`;\r\n\r\nexport { Section };\r\n","import styled from \"styled-components\";\r\nimport { Section } from \"./movieDetail.common.style\";\r\n\r\nconst CastSection = styled.section`\r\n  ${Section}\r\n  .slick-list {\r\n    text-align: center;\r\n  }\r\n  .slick-track {\r\n    @media (min-width: 767px) {\r\n      margin: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst CastInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 8px;\r\n\r\n  span:first-child {\r\n    font-weight: 800;\r\n    font-size: 17px;\r\n  }\r\n  span:last-child {\r\n    font-size: 15px;\r\n    color: #c7c7c7;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport { CastSection, CastInfo };\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { CastSection, CastInfo } from \"./MovieCast.style\";\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport { Avatar } from \"antd\";\r\nimport { UserOutlined } from \"@ant-design/icons\";\r\n\r\nconst settings = {\r\n  infinite: false,\r\n  speed: 500,\r\n  slidesToShow: 5,\r\n  slidesToScroll: 5,\r\n  responsive: [\r\n    {\r\n      breakpoint: 1024,\r\n      settings: {\r\n        slidesToShow: 3,\r\n        slidesToScroll: 3,\r\n      },\r\n    },\r\n    {\r\n      breakpoint: 600,\r\n      settings: {\r\n        slidesToShow: 2,\r\n        slidesToScroll: 2,\r\n      },\r\n    },\r\n    {\r\n      breakpoint: 480,\r\n      settings: {\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1,\r\n      },\r\n    },\r\n  ],\r\n};\r\n\r\nfunction MovieCast() {\r\n  const casts = useSelector((state) => state.movie.movieDetail.result.casts);\r\n\r\n  return (\r\n    <CastSection>\r\n      <h2>출연</h2>\r\n      <Slider {...settings}>\r\n        {casts.map((cast) => (\r\n          <React.Fragment key={cast.cast_id}>\r\n            <Avatar //\r\n              size={150}\r\n              src={cast.profile_path}\r\n              icon={!cast.profile_path && <UserOutlined />}\r\n            />\r\n            <CastInfo>\r\n              <span>{cast.name}</span>\r\n              <span>{cast.character}</span>\r\n            </CastInfo>\r\n          </React.Fragment>\r\n        ))}\r\n      </Slider>\r\n    </CastSection>\r\n  );\r\n}\r\n\r\nexport default MovieCast;\r\n","import styled from \"styled-components\";\r\n\r\nconst InfoSection = styled.section`\r\n  position: relative;\r\n  width: 100%;\r\n  color: white;\r\n  margin-bottom: 10vh;\r\n`;\r\n\r\nconst BackgroundImg = styled.div`\r\n  background: linear-gradient(rgba(20, 20, 20, 0.5) 0%, rgba(20, 20, 20, 0.5) 100%),\r\n    ${(props) => props.image && `url(${props.image}) `}no-repeat center center;\r\n  background-size: cover;\r\n  width: 100%;\r\n  height: 510px;\r\n`;\r\n\r\nconst MovieMeta = styled.section`\r\n  display: flex;\r\n  flex-direction: ${(props) => (props.mobile ? \"column\" : \"row\")};\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: ${(props) => (props.mobile ? \"auto\" : \"480px\")};\r\n  padding: 0 12vw;\r\n  margin-top: -210px;\r\n\r\n  @media (max-width: 1400px) {\r\n    padding: 0 8vw;\r\n  }\r\n  @media (max-width: 1199px) {\r\n    padding: 0 5vw;\r\n  }\r\n`;\r\n\r\nconst Poster = styled.div`\r\n  margin-right: 5px;\r\n  height: 100%;\r\n  img {\r\n    width: auto;\r\n    height: 100%;\r\n    border-radius: 8px;\r\n  }\r\n\r\n  @media (max-width: 1199px) {\r\n    height: 495px;\r\n  }\r\n`;\r\n\r\nconst Description = styled.div`\r\n  padding: 40px 15px 0 30px;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  & > div > div:last-child {\r\n    font-size: 2rem;\r\n  }\r\n  p {\r\n    font-size: 1.1rem;\r\n    margin-top: 55px;\r\n    padding: 5px;\r\n    overflow: auto;\r\n  }\r\n\r\n  @media (max-width: 1199px) {\r\n    text-align: center;\r\n    padding-left: 0;\r\n    padding-right: 0;\r\n    & > div > div:last-child {\r\n      margin: 0 auto;\r\n      margin-top: 15px;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 960px) {\r\n    p {\r\n      height: 250px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.div`\r\n  h2 {\r\n    display: inline-block;\r\n    color: white;\r\n    font-size: 2.4em;\r\n    font-weight: bold;\r\n    margin-bottom: 13px;\r\n  }\r\n`;\r\n\r\nconst InfoData = styled.div`\r\n  font-size: 1.1rem;\r\n  span {\r\n    margin: 0 8px;\r\n  }\r\n`;\r\n\r\nexport {\r\n  InfoSection, //\r\n  BackgroundImg,\r\n  MovieMeta,\r\n  Poster,\r\n  Description,\r\n  Title,\r\n  InfoData,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport * as S from \"./MovieInfo.style\";\r\nimport { Like } from \"../movieList/MovieCard.style\";\r\nimport Rate from \"../movieList/Rate\";\r\n\r\nfunction MovieInfo() {\r\n  let isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1199px)\" });\r\n  const movieDetail = useSelector((state) => state.movie.movieDetail.result);\r\n  const { id, title, vote_average, poster_path, backdrop_path, genres, runtime, overview } = movieDetail;\r\n  const [isLike, setIsLike] = useState(localStorage.getItem(movieDetail.id) !== null);\r\n\r\n  const addLike = () => {\r\n    const likedMovie = {\r\n      id,\r\n      title,\r\n      rate: vote_average,\r\n      poster: poster_path,\r\n    };\r\n    localStorage.setItem(id, JSON.stringify(likedMovie));\r\n  };\r\n\r\n  const removeLike = () => localStorage.removeItem(id);\r\n\r\n  const onClickLikeBtn = () => {\r\n    isLike ? removeLike() : addLike();\r\n    setIsLike(!isLike);\r\n  };\r\n\r\n  return (\r\n    <S.InfoSection>\r\n      <S.BackgroundImg image={backdrop_path} />\r\n      <S.MovieMeta mobile={isTabletOrMobile ? 1 : 0}>\r\n        {poster_path && (\r\n          <S.Poster>\r\n            <img src={poster_path} alt={title} />\r\n          </S.Poster>\r\n        )}\r\n        <S.Description>\r\n          <div>\r\n            <S.Title>\r\n              <h2>{title}</h2>\r\n              <Like //\r\n                detailpage=\"true\"\r\n                onClick={onClickLikeBtn}\r\n                liked={isLike ? 1 : 0}\r\n                mobile={1}\r\n              />\r\n            </S.Title>\r\n            <S.InfoData>\r\n              <span>{genres}</span>\r\n              <span>{runtime}분</span>\r\n            </S.InfoData>\r\n            <Rate detailpage=\"true\" rate={vote_average} />\r\n          </div>\r\n          <p>{overview}</p>\r\n        </S.Description>\r\n      </S.MovieMeta>\r\n    </S.InfoSection>\r\n  );\r\n}\r\n\r\nexport default React.memo(MovieInfo);\r\n","import styled from \"styled-components\";\r\nimport { PlayCircleFilled } from \"@ant-design/icons\";\r\nimport { Section } from \"./movieDetail.common.style\";\r\n\r\nconst MediaSection = styled.section`\r\n  ${Section}\r\n  h2 {\r\n    display: inline-block;\r\n  }\r\n  .slick-list {\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nconst Menu = styled.ul`\r\n  list-style: none;\r\n  display: inline-flex;\r\n  padding: 0;\r\n  margin: 0;\r\n  margin-left: 10px;\r\n\r\n  li {\r\n    cursor: pointer;\r\n    font-size: 1.1rem;\r\n    padding: 3px;\r\n    margin: 0 5px;\r\n  }\r\n  li.active {\r\n    border-bottom: 2px solid firebrick;\r\n  }\r\n`;\r\n\r\nconst Thumbnail = styled.div`\r\n  width: 22vw;\r\n  height: auto;\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  @media (max-width: 1199px) {\r\n    width: 25vw;\r\n  }\r\n  @media (max-width: 960px) {\r\n    width: 40vw;\r\n  }\r\n  @media (max-width: 767px) {\r\n    width: 80vw;\r\n  }\r\n`;\r\n\r\nconst PlayBtn = styled(PlayCircleFilled)`\r\n  position: absolute;\r\n  top: calc(50% - (3rem / 2));\r\n  left: calc(50% - (3rem / 2));\r\n  font-size: 3rem;\r\n`;\r\n\r\nexport { MediaSection, Menu, Thumbnail, PlayBtn };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport * as S from \"./MovieMedia.style\";\r\nimport { NoData } from \"../common\";\r\nimport mediumZoom from \"medium-zoom\";\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\nconst settings = {\r\n  infinite: false,\r\n  speed: 500,\r\n  slidesToShow: 3,\r\n  slidesToScroll: 3,\r\n  responsive: [\r\n    {\r\n      breakpoint: 1024,\r\n      settings: {\r\n        slidesToShow: 3,\r\n        slidesToScroll: 3,\r\n      },\r\n    },\r\n    {\r\n      breakpoint: 960,\r\n      settings: {\r\n        slidesToShow: 2,\r\n        slidesToScroll: 2,\r\n      },\r\n    },\r\n    {\r\n      breakpoint: 767,\r\n      settings: {\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1,\r\n      },\r\n    },\r\n  ],\r\n};\r\n\r\nfunction MovieCast() {\r\n  const [mediaType, setMediaType] = useState(\"image\");\r\n  const movieDetail = useSelector((state) => state.movie.movieDetail.result);\r\n  const images = movieDetail.images;\r\n  const videos = movieDetail.videos;\r\n\r\n  useEffect(() => {\r\n    mediumZoom(\".imgThumbnail\", {\r\n      margin: 50,\r\n      background: \"rgba(20, 20, 20, .9)\",\r\n    });\r\n  });\r\n\r\n  const changeMediaType = (e) => {\r\n    const target = e.currentTarget;\r\n    const type = target.dataset.type;\r\n\r\n    document.querySelectorAll(\".media\").forEach((el) => {\r\n      el.classList.remove(\"active\");\r\n    });\r\n    target.classList.add(\"active\");\r\n    setMediaType(type);\r\n  };\r\n\r\n  return (\r\n    <S.MediaSection>\r\n      <h2>미디어</h2>\r\n      <S.Menu>\r\n        <li //\r\n          className=\"media active\"\r\n          onClick={changeMediaType}\r\n          data-type=\"image\"\r\n        >\r\n          이미지\r\n        </li>\r\n        <li //\r\n          className=\"media\"\r\n          onClick={changeMediaType}\r\n          data-type=\"video\"\r\n        >\r\n          동영상\r\n        </li>\r\n      </S.Menu>\r\n      <React.Fragment>\r\n        {mediaType === \"image\" &&\r\n          (images.length > 0 ? (\r\n            <Slider {...settings}>\r\n              {images.map((image, index) => (\r\n                <React.Fragment key={index}>\r\n                  <S.Thumbnail>\r\n                    <img //\r\n                      className=\"imgThumbnail\"\r\n                      src={image}\r\n                      alt={`${movieDetail.title} 이미지`}\r\n                    />\r\n                  </S.Thumbnail>\r\n                </React.Fragment>\r\n              ))}\r\n            </Slider>\r\n          ) : (\r\n            <NoData>영화 이미지가 존재하지 않습니다.</NoData>\r\n          ))}\r\n        {mediaType === \"video\" &&\r\n          (videos.length > 0 ? (\r\n            <Slider {...settings}>\r\n              {videos.map((video, index) => (\r\n                <React.Fragment key={index}>\r\n                  <S.Thumbnail>\r\n                    <a //\r\n                      href={video.url}\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                    >\r\n                      <img src={video.thumbnail} alt={`${movieDetail.title} 영상`} />\r\n                      <S.PlayBtn />\r\n                    </a>\r\n                  </S.Thumbnail>\r\n                </React.Fragment>\r\n              ))}\r\n            </Slider>\r\n          ) : (\r\n            <NoData>관련 영상이 존재하지 않습니다.</NoData>\r\n          ))}\r\n      </React.Fragment>\r\n    </S.MediaSection>\r\n  );\r\n}\r\n\r\nexport default MovieCast;\r\n","import styled from \"styled-components\";\r\nimport { Section } from \"./movieDetail.common.style\";\r\n\r\nconst SimilarSection = styled.section`\r\n  ${Section}\r\n  h2 {\r\n    display: inline-block;\r\n  }\r\n  .slick-slide {\r\n    & > div {\r\n      width: 80%;\r\n      height: 100%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport { SimilarSection };\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { SimilarSection } from \"./SimilarMovies.style\";\r\nimport MovieCard from \"../../components/movieList/MovieCard\";\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\nconst settings = {\r\n  infinite: false,\r\n  speed: 500,\r\n  slidesToShow: 4,\r\n  slidesToScroll: 4,\r\n  responsive: [\r\n    {\r\n      breakpoint: 1200,\r\n      settings: {\r\n        slidesToShow: 3,\r\n        slidesToScroll: 3,\r\n        infinite: true,\r\n      },\r\n    },\r\n    {\r\n      breakpoint: 960,\r\n      settings: {\r\n        slidesToShow: 2,\r\n        slidesToScroll: 2,\r\n        infinite: true,\r\n      },\r\n    },\r\n    {\r\n      breakpoint: 600,\r\n      settings: {\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1,\r\n        infinite: true,\r\n      },\r\n    },\r\n  ],\r\n};\r\n\r\nfunction MovieCast() {\r\n  const similarMovies = useSelector((state) => state.movie.movieDetail.result.similarMovies);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {similarMovies.length > 0 && (\r\n        <SimilarSection>\r\n          <h2>비슷한 영화</h2>\r\n          <Slider {...settings}>\r\n            {similarMovies.map((movie) => (\r\n              <MovieCard //\r\n                key={movie.id}\r\n                movieId={movie.id}\r\n                title={movie.title}\r\n                rate={movie.vote_average}\r\n                poster={movie.poster_path ? movie.poster_path : null}\r\n                slider={\"true\"}\r\n              />\r\n            ))}\r\n          </Slider>\r\n        </SimilarSection>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default MovieCast;\r\n","import React, { useCallback, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getLikeList } from \"../store/modules/like\";\r\nimport { getMovieDetail } from \"../store/modules/movie\";\r\nimport { Loading } from \"../components/common\";\r\nimport { MovieInfo, MovieCast, MovieMedia, SimilarMovies } from \"../components/movieDetail\";\r\nimport useLoading from \"../hooks/useLoading\";\r\n\r\nfunction MovieDetail({ match }) {\r\n  const dispatch = useDispatch();\r\n  const movieId = match.params.movieId;\r\n  const isLoading = useSelector((state) => state.loading.isLoading);\r\n  const { detailSuccess } = useSelector((state) => state.movie.movieDetail);\r\n\r\n  const getMovieInfo = useCallback(async () => {\r\n    dispatch(await getMovieDetail(movieId));\r\n    window.scrollTo(0, 0);\r\n  }, [movieId]);\r\n\r\n  useLoading(getMovieInfo);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(getLikeList());\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {!isLoading && detailSuccess ? (\r\n        <section>\r\n          <MovieInfo />\r\n          <MovieCast />\r\n          <MovieMedia />\r\n          <SimilarMovies />\r\n        </section>\r\n      ) : (\r\n        <Loading />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default MovieDetail;\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NoData } from \"../components/common\";\r\nimport { MovieCard } from \"../components/movieList\";\r\nimport { GridWrapper } from \"../components/movieList/MovieCard.style\";\r\nimport { Row } from \"antd\";\r\n\r\nfunction MyMovie() {\r\n  const { likeListSuccess, result: likeList } = useSelector((state) => state.like.likeList);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <GridWrapper nobanner>\r\n        <h2>나의 영화</h2>\r\n        {likeListSuccess && likeList.length > 0 ? (\r\n          <Row gutter={[20, 30]}>\r\n            {likeList.map((movie) => (\r\n              <MovieCard //\r\n                key={movie.id}\r\n                movieId={movie.id}\r\n                title={movie.title}\r\n                rate={movie.rate}\r\n                poster={movie.poster ? movie.poster : null}\r\n                liked={true}\r\n                nobanner\r\n                mymovie\r\n              />\r\n            ))}\r\n          </Row>\r\n        ) : (\r\n          <NoData>좋아요를 누른 영화가 없습니다.</NoData>\r\n        )}\r\n      </GridWrapper>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default MyMovie;\r\n","import React, { Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { MovieCard } from \"../components/movieList\";\r\nimport { GridWrapper } from \"../components/movieList/MovieCard.style\";\r\nimport { Loading, NoData } from \"../components/common\";\r\nimport { Row } from \"antd\";\r\n\r\nfunction SearchResult() {\r\n  const { searchSuccess, result: searchResults } = useSelector((state) => state.search.searchResults);\r\n  const isLoading = useSelector((state) => state.loading.isLoading);\r\n  const likeList = useSelector((state) => state.like.likeList.result);\r\n  const likeMovieIdList = likeList.map((movie) => movie.id);\r\n\r\n  return (\r\n    <Fragment>\r\n      {!isLoading && searchSuccess ? (\r\n        <Fragment>\r\n          <GridWrapper nobanner>\r\n            {searchResults.length > 0 ? (\r\n              <Row gutter={[20, 30]}>\r\n                {searchResults.map((movie) => (\r\n                  <MovieCard //\r\n                    nobanner\r\n                    key={movie.id}\r\n                    movieId={movie.id}\r\n                    title={movie.title}\r\n                    rate={movie.vote_average}\r\n                    poster={movie.poster_path ? movie.poster_path : null}\r\n                    liked={likeMovieIdList.includes(movie.id)}\r\n                  />\r\n                ))}\r\n              </Row>\r\n            ) : (\r\n              <NoData>검색 결과가 존재하지 않습니다.</NoData>\r\n            )}\r\n          </GridWrapper>\r\n        </Fragment>\r\n      ) : (\r\n        <Loading />\r\n      )}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default React.memo(SearchResult);\r\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { getLikeList } from \"./store/modules/like\";\nimport NavBar from \"./components/navbar/NavBar\";\nimport { Home, SearchResult, MyMovie, MovieDetail } from \"./pages\";\nimport \"./App.css\";\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getLikeList());\n  }, []);\n\n  return (\n    <React.Fragment>\n      <NavBar />\n      <Switch>\n        <Route exact path=\"/movie\" component={Home} />\n        <Route exact path=\"/list/:type\" component={Home} />\n        <Route exact path=\"/mymovie\" component={MyMovie} />\n        <Route exact path=\"/movie/:movieId\" component={MovieDetail} />\n        <Route exact path=\"/search\" component={SearchResult} />\n      </Switch>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\r\nimport movie from \"./movie\";\r\nimport like from \"./like\";\r\nimport search from \"./search\";\r\nimport loading from \"./loading\";\r\n\r\nexport default combineReducers({\r\n  movie,\r\n  like,\r\n  search,\r\n  loading,\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\n\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport promiseMiddleware from \"redux-promise\";\nimport ReduxThunk from \"redux-thunk\";\nimport Reducer from \"./store/modules\";\n\nconst devTool = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\nconst createStoreWithMiddleware = applyMiddleware(ReduxThunk, promiseMiddleware)(createStore);\n\nReactDOM.render(\n  <Provider store={createStoreWithMiddleware(Reducer, devTool)}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/no-poster.d38bc38a.png\";"],"sourceRoot":""}