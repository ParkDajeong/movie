{"version":3,"sources":["config/config.js","lib/movieAPI.js","store/modules/like.js","components/navbar/NavBar.style.js","store/modules/search.js","components/navbar/Search.style.js","components/navbar/Search.js","hooks/useDebouce.js","components/navbar/NavBar.js","components/movieList/MovieCard.style.js","components/movieList/Rate.js","components/movieList/MovieCard.js","store/api/movieAPI.js","store/modules/movie.js","components/movieList/MainBanner.style.js","components/movieList/MainBanner.js","pages/Home.js","components/movieDetail/movieDetail.common.style.js","components/movieDetail/MovieMedia.style.js","pages/MyMovie.js","components/movieDetail/MovieInfo.style.js","components/movieDetail/MovieInfo.js","components/movieDetail/MovieCast.style.js","components/movieDetail/MovieCast.js","components/movieDetail/MovieMedia.js","components/movieDetail/SimilarMovies.style.js","components/movieDetail/SimilarMovies.js","pages/MovieDetail.js","App.js","store/modules/index.js","index.js","images/no-poster.png"],"names":["API_KEY","API_URL","IMAGE_BASE_URL","getData","type","language","query","a","ko","queryStr","path","axios","get","then","response","data","result","getSearchResults","results","searchResult","map","movie","id","title","vote_average","poster_path","getLikeList","likeMovies","i","localStorage","length","key","value","JSON","parse","getItem","push","MovieAPI","likeReducer","handleActions","state","likeList","likeListSuccess","rate","poster","commonFlex","Nav","styled","nav","props","isScroll","LeftSection","section","mobile","css","LeftMenu","ul","menuOpen","TopArrow","div","initialState","searchResults","searchSuccess","getSearchData","searchReducer","SearchBox","SearchForm","Input","searchopen","SearchBtn","button","React","memo","dispatch","useDispatch","useState","isSearching","setIsSearching","searchData","setSearchData","checkFirst","setCheckFirst","inputRef","useRef","history","useHistory","location","useLocation","debouncedSearchTerm","delay","setData","useEffect","timer","setTimeout","clearTimeout","useDebounce","search","queryStirng","q","openSearchBox","closeSearchBox","goBack","replace","pathname","includes","current","focus","toggleSearchBtn","onBlur","ref","placeholder","prefix","SearchOutlined","onChange","e","target","onClick","mobileMenuOpen","setMobileMenuOpen","didScroll","setDidScroll","isTabletOrMobile","useMediaQuery","menuContainer","window","addEventListener","scrollTop","srcElement","scrollingElement","onClickOutsideHandler","contains","onToggleMobileMenu","to","className","GridWrapper","nobanner","Poster","Like","HeartFilled","detailpage","liked","Info","StarRating","BackStars","FrontStars","percent","StarFilled","MovieCard","isMobile","isLike","setIsLike","slider","src","noPoster","alt","xl","lg","md","sm","xs","movieId","removeItem","removeLike","likedMovie","setItem","stringify","addLike","mymovie","catch","err","console","log","getMovieList","movieList","getMainBannerData","Number","original_title","tagline","backdrop_path","getMovieDetail","genres","genre","name","join","overview","runtime","getMovieCast","casts","cast","slice","cast_id","character","profile_path","getMovieVideos","videos","video","site","url","thumbnail","getMovieImages","images","backdrops","backdrop","file_path","getSimilarMovies","similarMovies","getMainBanner","randomMovie","randomMovieId","Math","floor","random","info","movieReducer","movies","moviesSuccess","mainBanner","bannerSuccess","movieDetail","detailSuccess","MainBanner","article","image","BannerCover","MovieDetail","MoreBtn","Button","mainMovie","useSelector","Fragment","listType","trend","latest","rated","match","params","likeMovieIdList","like","scrollTo","gutter","Section","MediaSection","Menu","Thumbnail","PlayBtn","PlayCircleFilled","NoData","MyMovie","InfoSection","BackgroundImg","MovieMeta","Description","Title","InfoData","CastSection","CastInfo","settings","infinite","speed","slidesToShow","slidesToScroll","responsive","breakpoint","MovieCast","size","icon","UserOutlined","mediaType","setMediaType","mediumZoom","margin","background","changeMediaType","currentTarget","dataset","document","querySelectorAll","forEach","el","classList","remove","add","data-type","index","href","rel","SimilarSection","isLoading","setIsLoading","mounted","getDetail","MovieMedia","SimilarMovies","color","App","exact","component","Home","combineReducers","devTool","__REDUX_DEVTOOLS_EXTENSION__","createStoreWithMiddleware","applyMiddleware","ReduxThunk","promiseMiddleware","createStore","ReactDOM","render","store","Reducer","getElementById","module","exports"],"mappings":"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","file":"static/js/main.982083e2.chunk.js","sourcesContent":["// The Movie DB API\r\nexport const API_KEY = \"810cef9b256b121526d76a171f2f8138\";\r\nexport const API_URL = \"https://api.themoviedb.org/3/\";\r\nexport const IMAGE_BASE_URL = \"http://image.tmdb.org/t/p/\";\r\nexport const YOUTUBE_URL = \"https://www.youtube.com/watch?v=\";\r\n","import axios from \"axios\";\r\nimport { API_URL, API_KEY } from \"../config/config\";\r\nimport { IMAGE_BASE_URL, YOUTUBE_URL } from \"../config/config\";\r\n\r\nexport const getData = async (type, language, query) => {\r\n  const ko = language ? `&language=${language}` : \"\";\r\n  const queryStr = query ? `&query=${query}` : \"\";\r\n  const path = `${API_URL}${type}?api_key=${API_KEY}${ko}${queryStr}`;\r\n  const result = await axios\r\n    .get(path) //\r\n    .then((response) => response.data);\r\n\r\n  return result;\r\n};\r\n\r\nexport const getMovieList = async () => {\r\n  const result = (await getData(\"trending/movie/week\", \"ko\")).results;\r\n  const movieList = result.map((movie) => {\r\n    return {\r\n      id: movie.id,\r\n      title: movie.title,\r\n      vote_average: movie.vote_average,\r\n      poster_path: `${IMAGE_BASE_URL}w500${movie.poster_path}`,\r\n    };\r\n  });\r\n\r\n  return movieList;\r\n};\r\n\r\nexport const getMainBannerData = async (id) => {\r\n  const result = await getData(`movie/${id}`, \"ko\");\r\n\r\n  return {\r\n    id: Number(id),\r\n    title: result.title,\r\n    original_title: result.original_title,\r\n    tagline: result.tagline,\r\n    backdrop_path: `${IMAGE_BASE_URL}original${result.backdrop_path}`,\r\n  };\r\n};\r\n\r\nexport const getMovieDetail = async (id) => {\r\n  const result = await getData(`movie/${id}`, \"ko\");\r\n  const genres = result.genres.map((genre) => genre.name).join(\", \");\r\n\r\n  return {\r\n    id: Number(id),\r\n    title: result.title,\r\n    original_title: result.original_title,\r\n    overview: result.overview,\r\n    genres: genres,\r\n    runtime: result.runtime,\r\n    vote_average: result.vote_average,\r\n    backdrop_path: `${IMAGE_BASE_URL}original${result.backdrop_path}`,\r\n    poster_path: result.poster_path ? `${IMAGE_BASE_URL}w500${result.poster_path}` : null,\r\n  };\r\n};\r\n\r\nexport const getMovieCredits = async (id) => {\r\n  const result = await getData(`movie/${id}/credits`);\r\n\r\n  return {\r\n    cast: result.cast.slice(0, 10),\r\n    crew: result.crew.slice(0, 10),\r\n  };\r\n};\r\n\r\nexport const getMovieVideos = async (id) => {\r\n  const result = await getData(`movie/${id}/videos`);\r\n  const videos = result.results.map((video) => {\r\n    if (video.site === \"YouTube\") {\r\n      return {\r\n        url: `${YOUTUBE_URL}${video.key}`,\r\n        thumbnail: `https://img.youtube.com/vi/${video.key}/hqdefault.jpg`,\r\n      };\r\n    }\r\n  });\r\n\r\n  return videos;\r\n};\r\n\r\nexport const getMovieImages = async (id) => {\r\n  const result = await getData(`movie/${id}/images`);\r\n  const images = result.backdrops.map((backdrop) => {\r\n    return `${IMAGE_BASE_URL}original${backdrop.file_path}`;\r\n  });\r\n\r\n  return images;\r\n};\r\n\r\nexport const getMovieRecommendations = async (id) => {\r\n  const result = await getData(`movie/${id}/recommendations`, \"ko\");\r\n  let recommendations = result.results.slice(0, 8);\r\n  recommendations = recommendations.map((movie) => {\r\n    return {\r\n      id: movie.id,\r\n      title: movie.title,\r\n      original_title: movie.original_title,\r\n      vote_average: movie.vote_average,\r\n      poster_path: `${IMAGE_BASE_URL}w500${movie.poster_path}`,\r\n    };\r\n  });\r\n\r\n  return recommendations;\r\n};\r\n\r\nexport const getAllLikeMovies = () => {\r\n  let likeMovies = [];\r\n  for (let i = 0; i < localStorage.length; i++) {\r\n    const key = localStorage.key(i);\r\n    const value = JSON.parse(localStorage.getItem(key));\r\n\r\n    likeMovies.push(value);\r\n  }\r\n  return likeMovies;\r\n};\r\n\r\nexport const getSearchResults = async (query) => {\r\n  const result = (await getData(`search/movie`, \"ko\", query)).results;\r\n  const searchResult = result.map((movie) => {\r\n    return {\r\n      id: movie.id,\r\n      title: movie.title,\r\n      vote_average: movie.vote_average,\r\n      poster_path: movie.poster_path ? `${IMAGE_BASE_URL}w500${movie.poster_path}` : null,\r\n    };\r\n  });\r\n\r\n  return searchResult;\r\n};\r\n","import * as MovieAPI from \"../../lib/movieAPI\";\r\nimport { handleActions } from \"redux-actions\";\r\n\r\nconst GET_LIKELIST = \"movieApp/GET_LIKELIST\";\r\n\r\nconst initialState = {\r\n  likeList: {\r\n    likeListSuccess: false,\r\n    result: [\r\n      {\r\n        id: \"\",\r\n        title: \"\",\r\n        rate: \"\",\r\n        poster: \"\",\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nexport const getLikeList = () => {\r\n  const result = MovieAPI.getAllLikeMovies();\r\n\r\n  return {\r\n    type: GET_LIKELIST,\r\n    result,\r\n  };\r\n};\r\n\r\nconst likeReducer = handleActions(\r\n  {\r\n    [GET_LIKELIST]: (state, { result }) => ({\r\n      ...state,\r\n      likeList: {\r\n        likeListSuccess: true,\r\n        result,\r\n      },\r\n    }),\r\n  },\r\n  initialState\r\n);\r\n\r\nexport default likeReducer;\r\n","import styled, { css } from \"styled-components\";\r\n\r\n/* Common */\r\nconst commonUl = `\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n`;\r\n\r\nconst commonFlex = `\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\n/* Desktop */\r\nconst Nav = styled.nav`\r\n  ${commonFlex}\r\n  justify-content: space-between;\r\n  position: fixed;\r\n  background-color: ${(props) => (props.isScroll ? \"rgba(20,20,20,0.95);\" : \"\")};\r\n  transition: background-color 0.3s linear;\r\n  padding: 20px 40px;\r\n  height: 70px;\r\n  width: 100%;\r\n  z-index: 4;\r\n`;\r\n/*color: #eeeeee;\r\n  text-shadow: 4px 0px #939599; */\r\n\r\nconst LeftSection = styled.section`\r\n  ${(props) =>\r\n    !props.mobile\r\n      ? css`\r\n          ${commonFlex}\r\n        `\r\n      : css`\r\n          display: flex;\r\n          align-items: center;\r\n          height: 100%;\r\n        `}\r\n\r\n  & > a {\r\n    font-size: 1.8rem;\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nconst LeftMenu = styled.ul`\r\n  ${commonUl}\r\n  color: white;\r\n  font-size: 1.2em;\r\n  ${(props) =>\r\n    !props.mobile\r\n      ? css`\r\n          ${commonFlex}\r\n          margin-left: 15px;\r\n          li {\r\n            ${commonFlex}\r\n            padding-left: 18px;\r\n            a:hover {\r\n              font-weight: 600;\r\n            }\r\n          }\r\n          .nav_menu {\r\n            display: none;\r\n          }\r\n        `\r\n      : css`\r\n          flex-direction: column;\r\n          margin-left: 1.7rem;\r\n          height: 25px;\r\n          text-align: center;\r\n          li {\r\n          }\r\n          .nav_menu {\r\n            cursor: pointer;\r\n            width: ${(props) => (props.menuOpen ? \"27%\" : \"100%\")};\r\n            margin-bottom: 30px;\r\n            span {\r\n              font-size: small;\r\n            }\r\n            & + li {\r\n              border-top: 2px solid white;\r\n            }\r\n          }\r\n          li:not(.nav_menu) {\r\n            display: ${(props) => (props.menuOpen ? \"\" : \"none\")};\r\n            background-color: rgba(20, 20, 20, 0.9);\r\n            transform: translateX(-38%);\r\n          }\r\n          li > a {\r\n            width: 100%;\r\n            padding: 13px 50px;\r\n            display: inline-block;\r\n            &:hover {\r\n              background-color: rgba(100, 100, 100, 0.5);\r\n            }\r\n          }\r\n        `}\r\n`;\r\n\r\nconst TopArrow = styled.div`\r\n  content: \"\";\r\n  position: absolute;\r\n  left: 0;\r\n  right: 0;\r\n  top: -9px;\r\n  margin: 0 auto;\r\n  width: 0;\r\n  height: 0;\r\n  border-bottom: 7px solid white;\r\n  border-left: 10px solid transparent;\r\n  border-right: 10px solid transparent;\r\n`;\r\n\r\nexport { Nav, LeftSection, LeftMenu, TopArrow };\r\n","import * as MovieAPI from \"../../lib/movieAPI\";\r\nimport { handleActions } from \"redux-actions\";\r\n\r\nconst GET_SEARCH_RESULTS = \"movieApp/GET_SEARCH_RESULTS\";\r\n\r\nconst initialState = {\r\n  searchResults: {\r\n    searchSuccess: false,\r\n    result: [\r\n      {\r\n        id: \"\",\r\n        title: \"\",\r\n        vote_average: \"\",\r\n        poster_path: \"\",\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nexport const getSearchData = async (query) => {\r\n  if (query === \"\") {\r\n    return {\r\n      type: GET_SEARCH_RESULTS,\r\n      searchResults: initialState.searchResults,\r\n    };\r\n  }\r\n  const result = await MovieAPI.getSearchResults(query);\r\n\r\n  return {\r\n    type: GET_SEARCH_RESULTS,\r\n    searchResults: {\r\n      searchSuccess: true,\r\n      result,\r\n    },\r\n  };\r\n};\r\n\r\nconst searchReducer = handleActions(\r\n  {\r\n    [GET_SEARCH_RESULTS]: (state, { searchResults }) => ({\r\n      ...state,\r\n      searchResults,\r\n    }),\r\n  },\r\n  initialState\r\n);\r\n\r\nexport default searchReducer;\r\n","import styled, { css } from \"styled-components\";\r\nimport { Input } from \"antd\";\r\n\r\nconst SearchBox = styled.div`\r\n  position: relative;\r\n  font-size: 1.4rem;\r\n  color: white;\r\n`;\r\n\r\nconst SearchForm = styled(Input)`\r\n  width: ${(props) => (props.searchopen ? \"250px\" : \"10px\")};\r\n  opacity: ${(props) => (props.searchopen ? \"1\" : \"0\")};\r\n  position: absolute;\r\n  right: -15px;\r\n  margin-right: 10px;\r\n  padding: 5px 10px;\r\n  border-radius: 3px;\r\n  border-color: white;\r\n  background-color: rgba(20, 20, 20, 0.9);\r\n  transition: width 0.7s, opacity 0.7s ease;\r\n  &:hover {\r\n    border-color: white;\r\n  }\r\n  span {\r\n    color: white;\r\n    font-size: 1.4rem;\r\n  }\r\n  input {\r\n    background-color: rgba(20, 20, 20, 0);\r\n    color: white;\r\n    font-size: 1.1em;\r\n    margin: 0 5px;\r\n  }\r\n`;\r\n\r\nconst SearchBtn = styled.button`\r\n  position: relative;\r\n  background: none;\r\n  border: none;\r\n  outline: none;\r\n  cursor: pointer;\r\n  z-index: 5;\r\n  ${(props) =>\r\n    props.searchopen\r\n      ? css`\r\n          opacity: 0;\r\n          margin-right: 15px;\r\n          transition: opacity 0.1s ease, margin-right 0.5s ease;\r\n          pointer-events: none;\r\n        `\r\n      : css`\r\n          opacity: 1;\r\n          margin-right: 0px;\r\n          transition: opacity 0.5s ease 0.1s, margin-right 0.5s ease;\r\n        `};\r\n`;\r\n\r\nexport { SearchBox, SearchForm, SearchBtn };\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport queryStirng from \"query-string\";\r\nimport { getSearchData } from \"../../store/modules/search\";\r\nimport { SearchBox, SearchForm, SearchBtn } from \"./Search.style\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport useDebounce from \"../../hooks/useDebouce\";\r\nimport \"antd/dist/antd.css\";\r\n\r\nfunction Search() {\r\n  const dispatch = useDispatch();\r\n  const [isSearching, setIsSearching] = useState(false);\r\n  const [searchData, setSearchData] = useState(\"\");\r\n  const [checkFirst, setCheckFirst] = useState(true);\r\n\r\n  let inputRef = useRef(null);\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const debouncedSearchTerm = useDebounce(searchData, 800);\r\n\r\n  useEffect(() => {\r\n    const { search } = location;\r\n    const { q: data } = queryStirng.parse(search);\r\n\r\n    if (data) {\r\n      openSearchBox();\r\n      setSearchData(data);\r\n      dispatch(getSearchData(data));\r\n    } else {\r\n      history.push(\"/\");\r\n      setIsSearching(false);\r\n      closeSearchBox();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (debouncedSearchTerm === \"\" && !checkFirst) {\r\n      history.goBack();\r\n      setCheckFirst(true);\r\n    }\r\n\r\n    if (debouncedSearchTerm) {\r\n      const path = `/search?q=${searchData}`;\r\n      if (checkFirst) {\r\n        history.push(path);\r\n        setCheckFirst(false);\r\n      } else {\r\n        history.replace(path);\r\n      }\r\n    }\r\n    dispatch(getSearchData(debouncedSearchTerm));\r\n  }, [debouncedSearchTerm]);\r\n\r\n  useEffect(() => {\r\n    if (!location.pathname.includes(\"search\")) {\r\n      closeSearchBox();\r\n      setCheckFirst(true);\r\n    }\r\n  }, [location.pathname]);\r\n\r\n  const openSearchBox = () => {\r\n    setIsSearching(true);\r\n    inputRef.current.focus();\r\n  };\r\n\r\n  const closeSearchBox = () => {\r\n    const { pathname } = location;\r\n    const { q: data } = queryStirng.parse(location.search);\r\n    if (pathname.includes(\"search\") && data) {\r\n      setIsSearching(true);\r\n      return;\r\n    }\r\n    setIsSearching(false);\r\n    setSearchData(\"\");\r\n  };\r\n\r\n  const toggleSearchBtn = () => {\r\n    !isSearching ? openSearchBox() : closeSearchBox();\r\n  };\r\n\r\n  return (\r\n    <SearchBox onBlur={toggleSearchBtn}>\r\n      <SearchForm //\r\n        ref={inputRef}\r\n        value={searchData}\r\n        placeholder=\"Search\"\r\n        prefix={<SearchOutlined />}\r\n        searchopen={isSearching ? 1 : 0}\r\n        onChange={(e) => setSearchData(e.target.value)}\r\n      />\r\n      <SearchBtn //\r\n        searchopen={isSearching ? 1 : 0}\r\n        onClick={toggleSearchBtn}\r\n      >\r\n        <SearchOutlined />\r\n      </SearchBtn>\r\n    </SearchBox>\r\n  );\r\n}\r\n\r\nexport default React.memo(Search);\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport default (value, delay) => {\r\n  const [data, setData] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => setData(value), delay);\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [value, delay]);\r\n\r\n  return data;\r\n};\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport { Nav, LeftSection, LeftMenu, TopArrow } from \"./NavBar.style\";\r\nimport Search from \"./Search\";\r\n\r\nfunction NavBar() {\r\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\r\n  const [didScroll, setDidScroll] = useState(false);\r\n  let isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1199px)\" });\r\n  let menuContainer = useRef(null);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", (e) => {\r\n      const scrollTop = e.srcElement.scrollingElement.scrollTop;\r\n      if (scrollTop >= 50) {\r\n        setDidScroll(true);\r\n      } else {\r\n        setDidScroll(false);\r\n      }\r\n    });\r\n    window.addEventListener(\"click\", onClickOutsideHandler);\r\n  });\r\n\r\n  const onClickOutsideHandler = (e) => {\r\n    if (mobileMenuOpen && !menuContainer.current.contains(e.target)) {\r\n      setMobileMenuOpen(false);\r\n    }\r\n  };\r\n\r\n  const onToggleMobileMenu = () => {\r\n    if (!isTabletOrMobile) return;\r\n    setMobileMenuOpen(!mobileMenuOpen);\r\n  };\r\n\r\n  return (\r\n    <Nav isScroll={didScroll}>\r\n      <LeftSection mobile={isTabletOrMobile}>\r\n        <Link to=\"/\">Movies</Link>\r\n        <LeftMenu //\r\n          ref={menuContainer}\r\n          mobile={isTabletOrMobile}\r\n          menuOpen={mobileMenuOpen}\r\n        >\r\n          <li //\r\n            className=\"nav_menu\"\r\n            onClick={onToggleMobileMenu}\r\n          >\r\n            메뉴\r\n            <span>▼</span>\r\n          </li>\r\n          <li>\r\n            <TopArrow />\r\n            <Link to=\"/list/latest\" onClick={onToggleMobileMenu}>\r\n              최신순\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/list/trend\" onClick={onToggleMobileMenu}>\r\n              인기순\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/list/rated\" onClick={onToggleMobileMenu}>\r\n              평점순\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/mymovie\" onClick={onToggleMobileMenu}>\r\n              나의 영화\r\n            </Link>\r\n          </li>\r\n        </LeftMenu>\r\n      </LeftSection>\r\n      <Search />\r\n    </Nav>\r\n  );\r\n}\r\n\r\nexport default React.memo(NavBar);\r\n","import styled, { css } from \"styled-components\";\r\nimport { HeartFilled } from \"@ant-design/icons\";\r\n\r\nconst GridWrapper = styled.div`\r\n  width: 100%;\r\n  margin: 1rem auto;\r\n  padding: 30px 50px 10px;\r\n  ${(props) => props.nobanner && \"padding-top: 100px; margin-top: 0;\"}\r\n  h2 {\r\n    color: white;\r\n    font-size: 1.7rem;\r\n    font-weight: 600;\r\n    border-bottom: 1px solid #eee;\r\n    padding: 0 15px 15px;\r\n    margin-bottom: 30px;\r\n  }\r\n`;\r\n\r\nconst Poster = styled.div`\r\n  position: relative;\r\n  height: 100%;\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 5px;\r\n  }\r\n  &:hover {\r\n    & > span {\r\n      opacity: 1;\r\n    }\r\n    & > span:hover {\r\n      transform: scale(1.15);\r\n    }\r\n    & > a > div {\r\n      background-color: rgb(20, 20, 20, 0.7);\r\n      span {\r\n        opacity: 1;\r\n      }\r\n      div {\r\n        opacity: 1;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Like = styled(HeartFilled)`\r\n  ${(props) =>\r\n    !props.detailpage &&\r\n    css`\r\n      position: absolute;\r\n      top: 0;\r\n      right: 0;\r\n    `}\r\n\r\n  font-size: 2.2rem;\r\n  padding: 15px 10px;\r\n  cursor: pointer;\r\n  transition: all 0.5s ease;\r\n  ${(props) => (props.liked ? \"color: #ff7875;\" : \"color: #eee;\")}\r\n  ${(props) => (props.mobile ? \"opacity: 1; \" : \"opacity: 0;\")}\r\n  svg {\r\n    filter: drop-shadow(1px 0px 2px rgba(0, 0, 0, 0.4));\r\n  }\r\n`;\r\n\r\nconst Info = styled.div`\r\n  ${(props) =>\r\n    props.mobile //\r\n      ? css`\r\n          bottom: 0;\r\n          height: auto;\r\n          background-color: rgb(20, 20, 20, 0.7);\r\n          padding: 8px 5px 12px;\r\n          span,\r\n          div {\r\n            opacity: 1;\r\n          }\r\n        `\r\n      : css`\r\n          top: 0;\r\n          height: 100%;\r\n          padding: 0 5px;\r\n          background-color: rgb(20, 20, 20, 0);\r\n          transition: all 0.5s ease;\r\n          span,\r\n          div {\r\n            opacity: 0;\r\n            transition: all 0.5s ease;\r\n          }\r\n        `}\r\n  left: 0;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: absolute;\r\n\r\n  span {\r\n    text-align: center;\r\n    font-weight: 700;\r\n    font-size: 1.45rem;\r\n  }\r\n`;\r\n\r\nexport { GridWrapper, Poster, Info, Like };\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { StarFilled } from \"@ant-design/icons\";\r\n\r\nfunction Rate(props) {\r\n  return (\r\n    <StarRating>\r\n      <BackStars>\r\n        <StarFilled />\r\n        <StarFilled />\r\n        <StarFilled />\r\n        <StarFilled />\r\n        <StarFilled />\r\n      </BackStars>\r\n      <FrontStars percent={props.rate}>\r\n        <StarFilled />\r\n        <StarFilled />\r\n        <StarFilled />\r\n        <StarFilled />\r\n        <StarFilled />\r\n      </FrontStars>\r\n    </StarRating>\r\n  );\r\n}\r\n\r\nconst StarRating = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n  margin-top: ${(props) => (props.detailpage ? \"8px\" : \"15px;\")};\r\n  width: fit-content;\r\n`;\r\n\r\nconst BackStars = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n`;\r\n\r\nconst FrontStars = styled.div`\r\n  width: ${(props) => (props.percent ? props.percent * 10 + \"%\" : \"0%\")};\r\n  display: flex;\r\n  color: #ffbc0b;\r\n  overflow: hidden;\r\n  position: absolute;\r\n  text-shadow: 2px 2px 5px #d29b09;\r\n  top: 0;\r\n  transition: all 0.5s;\r\n`;\r\n\r\nexport default React.memo(Rate);\r\n","import React, { useState } from \"react\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Poster, Info, Like } from \"./MovieCard.style\";\r\nimport { getLikeList } from \"../../store/modules/like\";\r\nimport noPoster from \"../../images/no-poster.png\";\r\nimport { Col } from \"antd\";\r\nimport Rate from \"./Rate\";\r\n\r\nfunction MovieCard(props) {\r\n  let isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1199px)\" });\r\n  let isMobile = useMediaQuery({ query: \"(max-width: 575px)\" });\r\n  const [isLike, setIsLike] = useState(props.liked);\r\n  const dispatch = useDispatch();\r\n\r\n  const addLike = () => {\r\n    const { movieId, rate, title, poster } = props;\r\n    const likedMovie = {\r\n      id: movieId,\r\n      title,\r\n      rate,\r\n      poster,\r\n    };\r\n    localStorage.setItem(movieId, JSON.stringify(likedMovie));\r\n  };\r\n\r\n  const removeLike = () => {\r\n    const { movieId } = props;\r\n    localStorage.removeItem(movieId);\r\n  };\r\n\r\n  const toggleLikeBtn = () => {\r\n    isLike ? removeLike() : addLike();\r\n    setIsLike(!isLike);\r\n    if (props.mymovie) dispatch(getLikeList());\r\n  };\r\n\r\n  if (!props.slider) {\r\n    return (\r\n      <Col xl={4} lg={6} md={8} sm={12} xs={24}>\r\n        <Poster //\r\n          mobile={isMobile ? 1 : 0}\r\n        >\r\n          <Link to={`/movie/${props.movieId}`}>\r\n            <img //\r\n              src={props.poster ? props.poster : noPoster}\r\n              alt={props.title}\r\n            />\r\n            <Info mobile={isTabletOrMobile ? 1 : 0}>\r\n              <span>{props.title}</span>\r\n              <Rate rate={props.rate} />\r\n            </Info>\r\n          </Link>\r\n          <Like //\r\n            onClick={toggleLikeBtn}\r\n            liked={isLike ? 1 : 0}\r\n            mobile={isTabletOrMobile ? 1 : 0}\r\n          />\r\n        </Poster>\r\n      </Col>\r\n    );\r\n  } else {\r\n    return (\r\n      <Poster>\r\n        <Link to={`/movie/${props.id}`}>\r\n          <img //\r\n            src={props.poster ? props.poster : noPoster}\r\n            alt={props.title}\r\n          />\r\n          <Info mobile={isTabletOrMobile ? 1 : 0}>\r\n            <span>{props.title}</span>\r\n            <Rate rate={props.rate} />\r\n          </Info>\r\n        </Link>\r\n      </Poster>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieCard;\r\n","import axios from \"axios\";\r\nimport { API_URL, API_KEY, IMAGE_BASE_URL, YOUTUBE_URL } from \"../../config/config\";\r\n\r\nexport const getData = async (type, language, query) => {\r\n  const ko = language ? `&language=${language}` : \"\";\r\n  const queryStr = query ? `&query=${query}` : \"\";\r\n  const path = `${API_URL}${type}?api_key=${API_KEY}${ko}${queryStr}`;\r\n  const result = await axios\r\n    .get(path) //\r\n    .then((response) => response.data)\r\n    .catch((err) => console.log(err));\r\n\r\n  return result;\r\n};\r\n\r\nexport const getMovieList = async (path) => {\r\n  const result = (await getData(path, \"ko\")).results;\r\n  const movieList = result.map((movie) => {\r\n    return {\r\n      id: movie.id,\r\n      title: movie.title,\r\n      vote_average: movie.vote_average,\r\n      poster_path: `${IMAGE_BASE_URL}w500${movie.poster_path}`,\r\n    };\r\n  });\r\n\r\n  return movieList;\r\n};\r\n\r\nexport const getMainBannerData = async (id) => {\r\n  const result = await getData(`movie/${id}`, \"ko\");\r\n\r\n  return {\r\n    id: Number(id),\r\n    title: result.title,\r\n    original_title: result.original_title,\r\n    tagline: result.tagline,\r\n    backdrop_path: `${IMAGE_BASE_URL}original${result.backdrop_path}`,\r\n  };\r\n};\r\n\r\nexport const getMovieDetail = async (id) => {\r\n  const result = await getData(`movie/${id}`, \"ko\");\r\n  const genres = result.genres.map((genre) => genre.name).join(\", \");\r\n\r\n  return {\r\n    id: Number(id),\r\n    title: result.title,\r\n    original_title: result.original_title,\r\n    overview: result.overview,\r\n    genres: genres,\r\n    runtime: result.runtime,\r\n    vote_average: result.vote_average,\r\n    backdrop_path: `${IMAGE_BASE_URL}original${result.backdrop_path}`,\r\n    poster_path: result.poster_path //\r\n      ? `${IMAGE_BASE_URL}w500${result.poster_path}`\r\n      : null,\r\n  };\r\n};\r\n\r\nexport const getMovieCast = async (id) => {\r\n  const result = await getData(`movie/${id}/credits`);\r\n  let casts = result.cast.slice(0, 10);\r\n  casts = casts.map((cast) => {\r\n    return {\r\n      cast_id: cast.id,\r\n      character: cast.character,\r\n      name: cast.name,\r\n      profile_path: cast.profile_path //\r\n        ? `${IMAGE_BASE_URL}w200${cast.profile_path}`\r\n        : null,\r\n    };\r\n  });\r\n\r\n  return casts;\r\n};\r\n\r\nexport const getMovieVideos = async (id) => {\r\n  const result = await getData(`movie/${id}/videos`);\r\n  const videos = result.results.map((video) => {\r\n    if (video.site === \"YouTube\") {\r\n      return {\r\n        url: `${YOUTUBE_URL}${video.key}`,\r\n        thumbnail: `https://img.youtube.com/vi/${video.key}/mqdefault.jpg`,\r\n      };\r\n    }\r\n  });\r\n\r\n  return videos;\r\n};\r\n\r\nexport const getMovieImages = async (id) => {\r\n  const result = await getData(`movie/${id}/images`);\r\n  const images = result.backdrops.map((backdrop) => {\r\n    return `${IMAGE_BASE_URL}original${backdrop.file_path}`;\r\n  });\r\n\r\n  return images;\r\n};\r\n\r\nexport const getSimilarMovies = async (id) => {\r\n  const result = await getData(`movie/${id}/similar`, \"ko\");\r\n  let similarMovies = result.results.slice(0, 8);\r\n  similarMovies = similarMovies.map((movie) => {\r\n    return {\r\n      id: movie.id,\r\n      title: movie.title,\r\n      original_title: movie.original_title,\r\n      vote_average: movie.vote_average,\r\n      poster_path: `${IMAGE_BASE_URL}w500${movie.poster_path}`,\r\n    };\r\n  });\r\n\r\n  return similarMovies;\r\n};\r\n\r\nexport const getAllLikeMovies = () => {\r\n  let likeMovies = [];\r\n  for (let i = 0; i < localStorage.length; i++) {\r\n    const key = localStorage.key(i);\r\n    const value = JSON.parse(localStorage.getItem(key));\r\n\r\n    likeMovies.push(value);\r\n  }\r\n  return likeMovies;\r\n};\r\n\r\nexport const getSearchResults = async (query) => {\r\n  const result = (await getData(`search/movie`, \"ko\", query)).results;\r\n  const searchResult = result.map((movie) => {\r\n    return {\r\n      id: movie.id,\r\n      title: movie.title,\r\n      vote_average: movie.vote_average,\r\n      poster_path: movie.poster_path ? `${IMAGE_BASE_URL}w500${movie.poster_path}` : null,\r\n    };\r\n  });\r\n\r\n  return searchResult;\r\n};\r\n","import * as MovieAPI from \"../api/movieAPI\";\r\nimport { handleActions } from \"redux-actions\";\r\n\r\nconst GET_MOVIES = \"movieApp/GET_MOVIES\";\r\nconst GET_MAINBANNERS = \"movieApp/GET_MAINBANNERS\";\r\nconst GET_MOVIE_DETAIL = \"movieApp/GET_MOVIE_DETAIL\";\r\n//const CHANGE_DETAIL_STATE = \"movieApp/GET_MOVIE_DETAIL\";\r\n\r\nconst initialState = {\r\n  movies: {\r\n    moviesSuccess: false,\r\n    result: [\r\n      {\r\n        id: \"\",\r\n        title: \"\",\r\n        vote_average: \"\",\r\n        poster_path: \"\",\r\n      },\r\n    ],\r\n  },\r\n  mainBanner: {\r\n    bannerSuccess: false,\r\n    result: {\r\n      id: \"\",\r\n      title: \"\",\r\n      original_title: \"\",\r\n      tagline: \"\",\r\n      backdrop_path: \"\",\r\n    },\r\n  },\r\n  movieDetail: {\r\n    detailSuccess: false,\r\n    result: {\r\n      id: \"\",\r\n      title: \"\",\r\n      original_title: \"\",\r\n      overview: \"\",\r\n      genres: \"\",\r\n      runtime: \"\",\r\n      vote_average: \"\",\r\n      backdrop_path: \"\",\r\n      poster_path: \"\",\r\n      casts: [\r\n        {\r\n          cast_id: \"\",\r\n          character: \"\",\r\n          name: \"\",\r\n          profile_path: \"\",\r\n        },\r\n      ],\r\n      videos: [\r\n        {\r\n          url: \"\",\r\n          thumbnail: \"\",\r\n        },\r\n      ],\r\n      images: [],\r\n      similarMovies: [\r\n        {\r\n          id: \"\",\r\n          title: \"\",\r\n          original_title: \"\",\r\n          vote_average: \"\",\r\n          poster_path: \"\",\r\n        },\r\n      ],\r\n    },\r\n  },\r\n};\r\n\r\nexport const getMovieList = async (path) => {\r\n  const result = await MovieAPI.getMovieList(path);\r\n\r\n  return {\r\n    type: GET_MOVIES,\r\n    result,\r\n  };\r\n};\r\n\r\nexport const getMainBanner = async (path) => {\r\n  let randomMovie = {};\r\n  const movieList = await MovieAPI.getMovieList(path);\r\n\r\n  while (true) {\r\n    const randomMovieId = movieList[Math.floor(Math.random() * movieList.length)].id;\r\n    randomMovie = await MovieAPI.getMainBannerData(randomMovieId);\r\n\r\n    if (randomMovie.title && randomMovie.tagline && randomMovie.backdrop_path) {\r\n      randomMovie = {\r\n        type: GET_MAINBANNERS,\r\n        result: randomMovie,\r\n      };\r\n      break;\r\n    }\r\n  }\r\n\r\n  return randomMovie;\r\n};\r\n\r\nexport const getMovieDetail = async (movieId) => {\r\n  const info = await MovieAPI.getMovieDetail(movieId);\r\n  const casts = await MovieAPI.getMovieCast(movieId);\r\n  const videos = await MovieAPI.getMovieVideos(movieId);\r\n  const images = await MovieAPI.getMovieImages(movieId);\r\n  const similarMovies = await MovieAPI.getSimilarMovies(movieId);\r\n\r\n  return {\r\n    type: GET_MOVIE_DETAIL,\r\n    result: { ...info, casts, videos, images, similarMovies },\r\n  };\r\n};\r\n\r\nconst movieReducer = handleActions(\r\n  {\r\n    [GET_MOVIES]: (state, { result }) => ({\r\n      ...state,\r\n      movies: {\r\n        moviesSuccess: true,\r\n        result,\r\n      },\r\n    }),\r\n    [GET_MAINBANNERS]: (state, { result }) => ({\r\n      ...state,\r\n      mainBanner: {\r\n        bannerSuccess: true,\r\n        result,\r\n      },\r\n    }),\r\n    [GET_MOVIE_DETAIL]: (state, { result }) => ({\r\n      ...state,\r\n      movieDetail: {\r\n        detailSuccess: true,\r\n        result,\r\n      },\r\n    }),\r\n  },\r\n  initialState\r\n);\r\n\r\nexport default movieReducer;\r\n","import styled from \"styled-components\";\r\nimport { Button } from \"antd\";\r\n\r\nconst MainBanner = styled.article`\r\n  position: relative;\r\n  background: radial-gradient(rgba(20, 20, 20, 0) 30%, rgba(20, 20, 20, 0.1) 60%, rgba(20, 20, 20, 0.7) 95%),\r\n    ${(props) => props.image && `url(${props.image}) `} no-repeat center center;\r\n  background-size: cover;\r\n  width: 100%;\r\n  height: 750px;\r\n`;\r\n\r\nconst BannerCover = styled.div`\r\n  width: 100%;\r\n  height: 800px;\r\n  top: 0;\r\n  left: 0;\r\n  background: linear-gradient(\r\n    /* */ to bottom,\r\n    rgba(20, 20, 20, 0) 0%,\r\n    rgba(20, 20, 20, 0.5) 65%,\r\n    rgba(20, 20, 20, 0.75) 83%,\r\n    rgba(20, 20, 20, 1) 92%\r\n  );\r\n`;\r\n\r\nconst MovieDetail = styled.div`\r\n  position: absolute;\r\n  bottom: 0;\r\n  width: 100%;\r\n  padding: 10px 40px 60px;\r\n  h2,\r\n  p {\r\n    color: white;\r\n  }\r\n  h2 {\r\n    font-size: 2.3rem;\r\n    font-weight: bold;\r\n    margin-bottom: 13px;\r\n  }\r\n  p {\r\n    padding-left: 2px;\r\n    font-size: 1.3rem;\r\n  }\r\n`;\r\n\r\nconst MoreBtn = styled(Button)`\r\n  background-color: rgba(109, 109, 110, 0.8);\r\n  height: auto;\r\n  border: none;\r\n  border-radius: 5px;\r\n  color: white;\r\n  padding: 8px 1.8rem;\r\n  font-size: 1.2rem;\r\n  &:hover {\r\n    color: white;\r\n    background-color: rgba(109, 109, 110, 0.5);\r\n  }\r\n`;\r\n\r\nexport {\r\n  MainBanner, //\r\n  MovieDetail,\r\n  BannerCover,\r\n  MoreBtn,\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getMainBanner } from \"../../store/modules/movie\";\r\nimport * as S from \"./MainBanner.style\";\r\n\r\nfunction MainBanner({ type }) {\r\n  const dispatch = useDispatch();\r\n  const { result: mainMovie } = useSelector((state) => state.movie.mainBanner);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    dispatch(getMainBanner(type));\r\n  }, [type]);\r\n\r\n  const onClickMoreBtn = () => history.push(`/movie/${mainMovie.id}`);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <S.MainBanner image={mainMovie.backdrop_path}>\r\n        <div className=\"player\"></div>\r\n        <S.BannerCover />\r\n        <S.MovieDetail>\r\n          <h2>{mainMovie.title}</h2>\r\n          <p>{mainMovie.tagline}</p>\r\n          <S.MoreBtn //\r\n            onClick={onClickMoreBtn}\r\n          >\r\n            자세히 보기\r\n          </S.MoreBtn>\r\n        </S.MovieDetail>\r\n      </S.MainBanner>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default React.memo(MainBanner);\r\n","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport MovieCard from \"../components/movieList/MovieCard\";\r\nimport MainBanner from \"../components/movieList/MainBanner\";\r\nimport { getMovieList } from \"../store/modules/movie\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { GridWrapper } from \"../components/movieList/MovieCard.style\";\r\nimport { Row } from \"antd\";\r\n\r\nconst listType = {\r\n  trend: \"trending/movie/week\",\r\n  latest: \"movie/now_playing\",\r\n  rated: \"movie/top_rated\",\r\n};\r\n\r\nfunction Home({ match }) {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  let type = match.params.type;\r\n  type = type ? type : \"trend\";\r\n  const { moviesSuccess, result: movieList } = useSelector((state) => state.movie.movies);\r\n  const { searchSuccess, result: searchResults } = useSelector((state) => state.search.searchResults);\r\n  const likeList = useSelector((state) => state.like.likeList.result);\r\n  const likeMovieIdList = likeList.map((movie) => movie.id);\r\n  const [isSearching, setIsSearching] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const { pathname } = location;\r\n    if (pathname.includes(\"search\")) {\r\n      setIsSearching(true);\r\n    } else {\r\n      setIsSearching(false);\r\n    }\r\n    window.scrollTo(0, 0);\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(getMovieList(listType[type]));\r\n    window.scrollTo(0, 0);\r\n  }, [type]);\r\n\r\n  if (!isSearching) {\r\n    return (\r\n      <Fragment>\r\n        {moviesSuccess && (\r\n          <Fragment>\r\n            <MainBanner type={listType[type]} />\r\n            <GridWrapper>\r\n              <Row gutter={[20, 30]}>\r\n                {movieList.map((movie) => (\r\n                  <MovieCard //\r\n                    key={movie.id}\r\n                    movieId={movie.id}\r\n                    title={movie.title}\r\n                    rate={movie.vote_average}\r\n                    poster={movie.poster_path ? movie.poster_path : null}\r\n                    liked={likeMovieIdList.includes(movie.id)}\r\n                  />\r\n                ))}\r\n              </Row>\r\n            </GridWrapper>\r\n          </Fragment>\r\n        )}\r\n      </Fragment>\r\n    );\r\n  } else {\r\n    return (\r\n      <Fragment>\r\n        {searchSuccess && (\r\n          <Fragment>\r\n            <GridWrapper nobanner>\r\n              <Row gutter={[20, 30]}>\r\n                {searchResults.map((movie) => (\r\n                  <MovieCard //\r\n                    nobanner\r\n                    key={movie.id}\r\n                    movieId={movie.id}\r\n                    title={movie.title}\r\n                    rate={movie.vote_average}\r\n                    poster={movie.poster_path ? movie.poster_path : null}\r\n                    liked={likeMovieIdList.includes(movie.id)}\r\n                  />\r\n                ))}\r\n              </Row>\r\n            </GridWrapper>\r\n          </Fragment>\r\n        )}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default React.memo(Home);\r\n","import { css } from \"styled-components\";\r\n\r\nconst Section = css`\r\n  position: relative;\r\n  color: white;\r\n  padding: 0 12vw;\r\n  margin-bottom: 10vh;\r\n  h2 {\r\n    color: white;\r\n    font-size: 1.8rem;\r\n    font-weight: 800;\r\n    margin-bottom: 20px;\r\n  }\r\n  div > button {\r\n    z-index: 2;\r\n    width: auto;\r\n    height: auto;\r\n  }\r\n  div > button:before {\r\n    font-size: 35px;\r\n  }\r\n  .slick-track {\r\n    margin: 0;\r\n  }\r\n  .slick-slide {\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  @media (max-width: 1400px) {\r\n    padding: 0 8vw;\r\n  }\r\n  @media (max-width: 1199px) {\r\n    padding: 0 5vw;\r\n  }\r\n`;\r\n\r\nexport { Section };\r\n","import styled from \"styled-components\";\r\nimport { PlayCircleFilled } from \"@ant-design/icons\";\r\nimport { Section } from \"./movieDetail.common.style\";\r\n\r\nconst MediaSection = styled.section`\r\n  ${Section}\r\n  h2 {\r\n    display: inline-block;\r\n  }\r\n  .slick-list {\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nconst Menu = styled.ul`\r\n  list-style: none;\r\n  display: inline-flex;\r\n  padding: 0;\r\n  margin: 0;\r\n  margin-left: 10px;\r\n\r\n  li {\r\n    cursor: pointer;\r\n    font-size: 1.1rem;\r\n    padding: 3px;\r\n    margin: 0 5px;\r\n  }\r\n  li.active {\r\n    border-bottom: 2px solid firebrick;\r\n  }\r\n`;\r\n\r\nconst Thumbnail = styled.div`\r\n  width: 22vw;\r\n  height: auto;\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  @media (max-width: 1199px) {\r\n    width: 25vw;\r\n  }\r\n  @media (max-width: 960px) {\r\n    width: 40vw;\r\n  }\r\n  @media (max-width: 767px) {\r\n    width: 80vw;\r\n  }\r\n`;\r\n\r\nconst PlayBtn = styled(PlayCircleFilled)`\r\n  position: absolute;\r\n  top: calc(50% - (3rem / 2));\r\n  left: calc(50% - (3rem / 2));\r\n  font-size: 3rem;\r\n`;\r\n\r\nconst NoData = styled.div`\r\n  font-size: 1.2em;\r\n  padding: 5px 8px;\r\n  color: #ccc;\r\n`;\r\n\r\nexport { MediaSection, Menu, Thumbnail, PlayBtn, NoData };\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport MovieCard from \"../components/movieList/MovieCard\";\r\nimport { GridWrapper } from \"../components/movieList/MovieCard.style\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NoData } from \"../components/movieDetail/MovieMedia.style\";\r\nimport { Row } from \"antd\";\r\n\r\nfunction MyMovie() {\r\n  const { likeListSuccess, result: likeList } = useSelector((state) => state.like.likeList);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <GridWrapper nobanner>\r\n        <h2>나의 영화</h2>\r\n        {likeListSuccess ? (\r\n          <Row gutter={[20, 30]}>\r\n            {likeList.map((movie) => (\r\n              <MovieCard //\r\n                key={movie.id}\r\n                movieId={movie.id}\r\n                title={movie.title}\r\n                rate={movie.rate}\r\n                poster={movie.poster ? movie.poster : null}\r\n                liked={true}\r\n                nobanner\r\n                mymovie\r\n              />\r\n            ))}\r\n          </Row>\r\n        ) : (\r\n          <NoData>좋아요를 누른 영화가 없습니다.</NoData>\r\n        )}\r\n      </GridWrapper>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default MyMovie;\r\n","import styled from \"styled-components\";\r\n\r\nconst InfoSection = styled.section`\r\n  position: relative;\r\n  width: 100%;\r\n  color: white;\r\n  margin-bottom: 10vh;\r\n`;\r\n\r\nconst BackgroundImg = styled.div`\r\n  background: linear-gradient(rgba(20, 20, 20, 0.5) 0%, rgba(20, 20, 20, 0.5) 100%),\r\n    ${(props) => props.image && `url(${props.image}) `}no-repeat center center;\r\n  background-size: cover;\r\n  width: 100%;\r\n  height: 510px;\r\n`;\r\n\r\nconst MovieMeta = styled.section`\r\n  display: flex;\r\n  flex-direction: ${(props) => (props.mobile ? \"column\" : \"row\")};\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: ${(props) => (props.mobile ? \"auto\" : \"480px\")};\r\n  padding: 0 12vw;\r\n  margin-top: -210px;\r\n\r\n  @media (max-width: 1400px) {\r\n    padding: 0 8vw;\r\n  }\r\n  @media (max-width: 1199px) {\r\n    padding: 0 5vw;\r\n  }\r\n`;\r\n\r\nconst Poster = styled.div`\r\n  margin-right: 5px;\r\n  height: 100%;\r\n  img {\r\n    width: auto;\r\n    height: 100%;\r\n    border-radius: 8px;\r\n  }\r\n\r\n  @media (max-width: 1199px) {\r\n    height: 495px;\r\n  }\r\n`;\r\n\r\nconst Description = styled.div`\r\n  padding: 40px 15px 0 30px;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  & > div > div:last-child {\r\n    font-size: 2rem;\r\n  }\r\n  p {\r\n    font-size: 1.15rem;\r\n    margin-top: 55px;\r\n    padding: 5px;\r\n    overflow: auto;\r\n  }\r\n\r\n  @media (max-width: 1199px) {\r\n    text-align: center;\r\n    padding-left: 0;\r\n    padding-right: 0;\r\n    & > div > div:last-child {\r\n      margin: 0 auto;\r\n      margin-top: 15px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.div`\r\n  h2 {\r\n    display: inline-block;\r\n    color: white;\r\n    font-size: 2.4rem;\r\n    font-weight: bold;\r\n    margin-bottom: 13px;\r\n  }\r\n`;\r\n\r\nconst InfoData = styled.div`\r\n  font-size: 1.1rem;\r\n  span {\r\n    margin: 0 8px;\r\n  }\r\n`;\r\n\r\nexport {\r\n  InfoSection, //\r\n  BackgroundImg,\r\n  MovieMeta,\r\n  Poster,\r\n  Description,\r\n  Title,\r\n  InfoData,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport * as S from \"./MovieInfo.style\";\r\nimport { Like } from \"../movieList/MovieCard.style\";\r\nimport Rate from \"../movieList/Rate\";\r\n\r\nfunction MovieInfo() {\r\n  let isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1199px)\" });\r\n  const movieDetail = useSelector((state) => state.movie.movieDetail.result);\r\n  const [isLike, setIsLike] = useState(localStorage.getItem(movieDetail.id) !== null);\r\n\r\n  const addLike = () => {\r\n    const likedMovie = {\r\n      id: movieDetail.id,\r\n      title: movieDetail.title,\r\n      rate: movieDetail.vote_average,\r\n      poster: movieDetail.poster_path,\r\n    };\r\n    localStorage.setItem(movieDetail.id, JSON.stringify(likedMovie));\r\n  };\r\n\r\n  const removeLike = () => localStorage.removeItem(movieDetail.id);\r\n\r\n  const onClickLikeBtn = () => {\r\n    isLike ? removeLike() : addLike();\r\n    setIsLike(!isLike);\r\n  };\r\n\r\n  return (\r\n    <S.InfoSection>\r\n      <S.BackgroundImg image={movieDetail.backdrop_path} />\r\n      <S.MovieMeta mobile={isTabletOrMobile ? 1 : 0}>\r\n        {movieDetail.poster_path && (\r\n          <S.Poster>\r\n            <img src={movieDetail.poster_path} alt={movieDetail.title} />\r\n          </S.Poster>\r\n        )}\r\n        <S.Description>\r\n          <div>\r\n            <S.Title>\r\n              <h2>{movieDetail.title}</h2>\r\n              <Like //\r\n                detailpage=\"true\"\r\n                onClick={onClickLikeBtn}\r\n                liked={isLike ? 1 : 0}\r\n                mobile={1}\r\n              />\r\n            </S.Title>\r\n            <S.InfoData>\r\n              <span>{movieDetail.genres}</span>\r\n              <span>{movieDetail.runtime}분</span>\r\n            </S.InfoData>\r\n            <Rate detailpage=\"true\" rate={movieDetail.vote_average} />\r\n          </div>\r\n          <p>{movieDetail.overview}</p>\r\n        </S.Description>\r\n      </S.MovieMeta>\r\n    </S.InfoSection>\r\n  );\r\n}\r\n\r\nexport default React.memo(MovieInfo);\r\n","import styled from \"styled-components\";\r\nimport { Section } from \"./movieDetail.common.style\";\r\n\r\nconst CastSection = styled.section`\r\n  ${Section}\r\n  .slick-list {\r\n    text-align: center;\r\n  }\r\n  .slick-track {\r\n    @media (min-width: 767px) {\r\n      margin: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst CastInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 8px;\r\n\r\n  span:first-child {\r\n    font-weight: 800;\r\n    font-size: 17px;\r\n  }\r\n  span:last-child {\r\n    font-size: 15px;\r\n    color: #c7c7c7;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport { CastSection, CastInfo };\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { CastSection, CastInfo } from \"./MovieCast.style\";\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport { Avatar } from \"antd\";\r\nimport { UserOutlined } from \"@ant-design/icons\";\r\n\r\nconst settings = {\r\n  infinite: false,\r\n  speed: 500,\r\n  slidesToShow: 5,\r\n  slidesToScroll: 5,\r\n  responsive: [\r\n    {\r\n      breakpoint: 1024,\r\n      settings: {\r\n        slidesToShow: 3,\r\n        slidesToScroll: 3,\r\n      },\r\n    },\r\n    {\r\n      breakpoint: 600,\r\n      settings: {\r\n        slidesToShow: 2,\r\n        slidesToScroll: 2,\r\n      },\r\n    },\r\n    {\r\n      breakpoint: 480,\r\n      settings: {\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1,\r\n      },\r\n    },\r\n  ],\r\n};\r\n\r\nfunction MovieCast() {\r\n  const casts = useSelector((state) => state.movie.movieDetail.result.casts);\r\n\r\n  return (\r\n    <CastSection>\r\n      <h2>출연</h2>\r\n      <Slider {...settings}>\r\n        {casts.map((cast) => (\r\n          <React.Fragment key={cast.cast_id}>\r\n            <Avatar //\r\n              size={150}\r\n              src={cast.profile_path}\r\n              icon={!cast.profile_path && <UserOutlined />}\r\n            />\r\n            <CastInfo>\r\n              <span>{cast.name}</span>\r\n              <span>{cast.character}</span>\r\n            </CastInfo>\r\n          </React.Fragment>\r\n        ))}\r\n      </Slider>\r\n    </CastSection>\r\n  );\r\n}\r\n\r\nexport default MovieCast;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport * as S from \"./MovieMedia.style\";\r\nimport mediumZoom from \"medium-zoom\";\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\nconst settings = {\r\n  infinite: false,\r\n  speed: 500,\r\n  slidesToShow: 3,\r\n  slidesToScroll: 3,\r\n  responsive: [\r\n    {\r\n      breakpoint: 1024,\r\n      settings: {\r\n        slidesToShow: 3,\r\n        slidesToScroll: 3,\r\n      },\r\n    },\r\n    {\r\n      breakpoint: 960,\r\n      settings: {\r\n        slidesToShow: 2,\r\n        slidesToScroll: 2,\r\n      },\r\n    },\r\n    {\r\n      breakpoint: 767,\r\n      settings: {\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1,\r\n      },\r\n    },\r\n  ],\r\n};\r\n\r\nfunction MovieCast() {\r\n  const [mediaType, setMediaType] = useState(\"image\");\r\n  const movieDetail = useSelector((state) => state.movie.movieDetail.result);\r\n  const images = movieDetail.images;\r\n  const videos = movieDetail.videos;\r\n\r\n  useEffect(() => {\r\n    mediumZoom(\".imgThumbnail\", {\r\n      margin: 50,\r\n      background: \"rgba(20, 20, 20, .9)\",\r\n    });\r\n  });\r\n\r\n  const changeMediaType = (e) => {\r\n    const target = e.currentTarget;\r\n    const type = target.dataset.type;\r\n\r\n    document.querySelectorAll(\".media\").forEach((el) => {\r\n      el.classList.remove(\"active\");\r\n    });\r\n    target.classList.add(\"active\");\r\n    setMediaType(type);\r\n  };\r\n\r\n  return (\r\n    <S.MediaSection>\r\n      <h2>미디어</h2>\r\n      <S.Menu>\r\n        <li //\r\n          className=\"media active\"\r\n          onClick={changeMediaType}\r\n          data-type=\"image\"\r\n        >\r\n          이미지\r\n        </li>\r\n        <li //\r\n          className=\"media\"\r\n          onClick={changeMediaType}\r\n          data-type=\"video\"\r\n        >\r\n          동영상\r\n        </li>\r\n      </S.Menu>\r\n      <React.Fragment>\r\n        {mediaType === \"image\" &&\r\n          (images.length > 0 ? (\r\n            <Slider {...settings}>\r\n              {images.map((image, index) => (\r\n                <React.Fragment key={index}>\r\n                  <S.Thumbnail>\r\n                    <img //\r\n                      className=\"imgThumbnail\"\r\n                      src={image}\r\n                      alt={`${movieDetail.title} 이미지`}\r\n                    />\r\n                  </S.Thumbnail>\r\n                </React.Fragment>\r\n              ))}\r\n            </Slider>\r\n          ) : (\r\n            <S.NoData>영화 이미지가 존재하지 않습니다.</S.NoData>\r\n          ))}\r\n        {mediaType === \"video\" &&\r\n          (videos.length > 0 ? (\r\n            <Slider {...settings}>\r\n              {videos.map((video, index) => (\r\n                <React.Fragment key={index}>\r\n                  <S.Thumbnail>\r\n                    <a //\r\n                      href={video.url}\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                    >\r\n                      <img src={video.thumbnail} alt={`${movieDetail.title} 영상`} />\r\n                      <S.PlayBtn />\r\n                    </a>\r\n                  </S.Thumbnail>\r\n                </React.Fragment>\r\n              ))}\r\n            </Slider>\r\n          ) : (\r\n            <S.NoData>관련 영상이 존재하지 않습니다.</S.NoData>\r\n          ))}\r\n      </React.Fragment>\r\n    </S.MediaSection>\r\n  );\r\n}\r\n\r\nexport default MovieCast;\r\n","import styled from \"styled-components\";\r\nimport { Section } from \"./movieDetail.common.style\";\r\n\r\nconst SimilarSection = styled.section`\r\n  ${Section}\r\n  h2 {\r\n    display: inline-block;\r\n  }\r\n  .slick-slide {\r\n    & > div {\r\n      width: 80%;\r\n      height: 100%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport { SimilarSection };\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { SimilarSection } from \"./SimilarMovies.style\";\r\nimport MovieCard from \"../../components/movieList/MovieCard\";\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\nconst settings = {\r\n  infinite: false,\r\n  speed: 500,\r\n  slidesToShow: 4,\r\n  slidesToScroll: 4,\r\n  responsive: [\r\n    {\r\n      breakpoint: 1200,\r\n      settings: {\r\n        slidesToShow: 3,\r\n        slidesToScroll: 3,\r\n        infinite: true,\r\n      },\r\n    },\r\n    {\r\n      breakpoint: 960,\r\n      settings: {\r\n        slidesToShow: 2,\r\n        slidesToScroll: 2,\r\n        infinite: true,\r\n      },\r\n    },\r\n    {\r\n      breakpoint: 600,\r\n      settings: {\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1,\r\n        infinite: true,\r\n      },\r\n    },\r\n  ],\r\n};\r\n\r\nfunction MovieCast() {\r\n  const similarMovies = useSelector((state) => state.movie.movieDetail.result.similarMovies);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {similarMovies.length > 0 && (\r\n        <SimilarSection>\r\n          <h2>비슷한 영화</h2>\r\n          <Slider {...settings}>\r\n            {similarMovies.map((movie) => (\r\n              <MovieCard //\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.title}\r\n                rate={movie.vote_average}\r\n                poster={movie.poster_path ? movie.poster_path : null}\r\n                slider={\"true\"}\r\n              />\r\n            ))}\r\n          </Slider>\r\n        </SimilarSection>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default MovieCast;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getMovieDetail } from \"../store/modules/movie\";\r\nimport MovieInfo from \"../components/movieDetail/MovieInfo\";\r\nimport MovieCast from \"../components/movieDetail/MovieCast\";\r\nimport MovieMedia from \"../components/movieDetail/MovieMedia\";\r\nimport SimilarMovies from \"../components/movieDetail/SimilarMovies\";\r\nimport { WaveTopBottomLoading } from \"react-loadingg\";\r\n\r\nfunction MovieDetail({ match }) {\r\n  const dispatch = useDispatch();\r\n  const movieId = match.params.movieId;\r\n  const { detailSuccess } = useSelector((state) => state.movie.movieDetail);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    const getDetail = async () => {\r\n      dispatch(await getMovieDetail(movieId));\r\n      mounted && setIsLoading(false);\r\n    };\r\n\r\n    getDetail();\r\n    window.scrollTo(0, 0);\r\n\r\n    return () => {\r\n      mounted = false;\r\n      setIsLoading(true);\r\n    };\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {detailSuccess && !isLoading ? (\r\n        <section>\r\n          <MovieInfo />\r\n          <MovieCast />\r\n          <MovieMedia />\r\n          <SimilarMovies />\r\n        </section>\r\n      ) : (\r\n        <WaveTopBottomLoading //\r\n          color={\"firebrick\"}\r\n          size={\"large\"}\r\n        />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default MovieDetail;\r\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { getLikeList } from \"./store/modules/like\";\nimport NavBar from \"./components/navbar/NavBar\";\nimport Home from \"./pages/Home\";\nimport MyMovie from \"./pages/MyMovie\";\nimport MovieDetail from \"./pages/MovieDetail\";\nimport \"./App.css\";\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getLikeList());\n  }, []);\n\n  return (\n    <React.Fragment>\n      <NavBar />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/list/:type\" component={Home} />\n        <Route exact path=\"/mymovie\" component={MyMovie} />\n        <Route exact path=\"/movie/:movieId\" component={MovieDetail} />\n        <Route exact path=\"/search\" component={Home} />\n      </Switch>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\r\nimport movie from \"./movie\";\r\nimport like from \"./like\";\r\nimport search from \"./search\";\r\n\r\nexport default combineReducers({\r\n  movie,\r\n  like,\r\n  search,\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\n\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport promiseMiddleware from \"redux-promise\";\nimport ReduxThunk from \"redux-thunk\";\nimport Reducer from \"./store/modules\";\n\nconst devTool = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\nconst createStoreWithMiddleware = applyMiddleware(ReduxThunk, promiseMiddleware)(createStore);\n\nReactDOM.render(\n  <Provider store={createStoreWithMiddleware(Reducer, devTool)}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/no-poster.d38bc38a.png\";"],"sourceRoot":""}